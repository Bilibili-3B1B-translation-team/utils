[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: 3b1b
Audio File: Researchers thought this was a bug (Borwein integrals).mp4
Video File: Researchers thought this was a bug (Borwein integrals).mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.250000
Video Position: 1079

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,72,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,3,2,15,15,15,1
Style: ENG,Inter Medium,54,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,3,2,15,15,15,1
Style: CHN,MonyharOS Sans SC Medium,81,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,3,2,15,15,15,1
Style: comment,STZhongsong,76,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,98,100,0,0,1,2,0,2,10,10,3,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 1,0:00:35.15,0:00:39.15,CHN,,0,0,0,,{\fad(1000,1000)}{\an8\fs56\3c&H1063A4&}翻译   {\3c&HB0965A&}畏狐之狐  ksyx  NetaP495L\N{\3c&H1063A4&}校对  {\3c&HB0965A&}saniac  ZSC  ksyx  NetaP495L  {\3c&H1063A4&}时间轴  {\3c&HB0965A&}NetaP495L
Dialogue: 0,0:00:00.00,0:00:03.49,ENG,,0,0,0,,Sometimes it feels like the universe is just messing with you.
Dialogue: 0,0:00:00.00,0:00:03.49,CHN,,0,0,0,,有时候似乎全世界都在捉弄你
Dialogue: 0,0:00:03.38,0:00:25.05,CHN,,0,0,0,,{\pos(1157,410) \an1 \fad(400,400)}稍后再做解释
Dialogue: 0,0:00:03.49,0:00:06.39,ENG,,0,0,0,,I have up on screen here a sequence of computations
Dialogue: 0,0:00:03.49,0:00:06.39,CHN,,0,0,0,,现在屏幕上有一串式子
Dialogue: 0,0:00:06.39,0:00:09.23,ENG,,0,0,0,,and don't worry, in a moment we're going to unpack and visualize
Dialogue: 0,0:00:09.23,0:00:10.83,ENG,,0,0,0,,what each one is really saying.
Dialogue: 0,0:00:06.39,0:00:10.83,CHN,,0,0,0,,别担心  我们待会就逐条解读、描绘每条式子的内涵
Dialogue: 0,0:00:10.83,0:00:12.86,ENG,,0,0,0,,What I want you to notice is how the sequence follows
Dialogue: 0,0:00:10.83,0:00:12.86,CHN,,0,0,0,,请各位观众注意  这一串式子
Dialogue: 0,0:00:12.86,0:00:16.00,ENG,,0,0,0,,a very predictable, if random seeming pattern,
Dialogue: 0,0:00:12.86,0:00:16.00,CHN,,0,0,0,,都符合一个意料之外  情理之中的模式
Dialogue: 0,0:00:16.00,0:00:19.08,ENG,,0,0,0,,and how each computation happens to equal π.
Dialogue: 0,0:00:16.00,0:00:19.08,CHN,,0,0,0,,它们都恰好等于 π
Dialogue: 0,0:00:19.08,0:00:20.56,ENG,,0,0,0,,And if you are just messing around
Dialogue: 0,0:00:19.08,0:00:20.56,CHN,,0,0,0,,如果你出于某种原因
Dialogue: 0,0:00:20.56,0:00:23.30,ENG,,0,0,0,,evaluating these on a computer for some reason,
Dialogue: 0,0:00:20.56,0:00:23.30,CHN,,0,0,0,,正利用电脑求这些式子的值
Dialogue: 0,0:00:23.30,0:00:26.30,ENG,,0,0,0,,you might think that this was a pattern that would go on forever.
Dialogue: 0,0:00:23.30,0:00:26.30,CHN,,0,0,0,,你或许会认为将会一直如此
Dialogue: 0,0:00:26.30,0:00:27.35,ENG,,0,0,0,,But it doesn't.
Dialogue: 0,0:00:26.30,0:00:27.35,CHN,,0,0,0,,但结果不然
Dialogue: 0,0:00:27.35,0:00:30.64,ENG,,0,0,0,,At some point, it stops and instead of equaling π,
Dialogue: 0,0:00:27.35,0:00:30.64,CHN,,0,0,0,,在某个点上  这种规律不再成立
Dialogue: 0,0:00:30.64,0:00:34.58,ENG,,0,0,0,,you get a value which is just barely, barely less than π.
Dialogue: 0,0:00:30.64,0:00:34.58,CHN,,0,0,0,,你求得的值只比 π 小一点点点
Dialogue: 0,0:00:39.23,0:00:41.26,ENG,,0,0,0,,Alright, let's dig into what's going on here.
Dialogue: 0,0:00:39.23,0:00:41.26,CHN,,0,0,0,,好吧  让我们探讨一下这种现象
Dialogue: 0,0:00:41.26,0:00:45.43,ENG,,0,0,0,,The main character in the story today is the function sin of X divided by X.
Dialogue: 0,0:00:41.26,0:00:45.43,CHN,,0,0,0,,今天的故事主角是函数 sin(x)/x
Dialogue: 0,0:00:45.43,0:00:48.00,ENG,,0,0,0,,This actually comes up commonly enough in math and engineering
Dialogue: 0,0:00:45.43,0:00:48.00,CHN,,0,0,0,,这个函数在数学和工程上实在是太常用了
Dialogue: 0,0:00:48.00,0:00:49.80,ENG,,0,0,0,,that it gets its own name, "sinc"
Dialogue: 0,0:00:48.00,0:00:49.80,CHN,,0,0,0,,它有个专门的名字叫 sinc
Dialogue: 0,0:00:49.80,0:00:51.00,ENG,,0,0,0,,and the way you might think about it
Dialogue: 0,0:00:49.80,0:00:51.00,CHN,,0,0,0,,你可以这样想象它的图像
Dialogue: 0,0:00:51.00,0:00:54.07,ENG,,0,0,0,,is by starting with a normal oscillating sin curve
Dialogue: 0,0:00:51.00,0:00:54.07,CHN,,0,0,0,,起初是一列正常的正弦波
Dialogue: 0,0:00:54.07,0:00:55.53,ENG,,0,0,0,,and then sort of squishing it down
Dialogue: 0,0:00:54.07,0:00:55.53,CHN,,0,0,0,,然后将其乘以 1/X
Dialogue: 0,0:00:55.53,0:00:59.12,ENG,,0,0,0,,as you get far away from zero by multiplying it by 1 over X
Dialogue: 0,0:00:55.53,0:00:59.12,CHN,,0,0,0,,把远离零点的图像压扁
Dialogue: 0,0:00:59.21,0:01:06.15,CHN,,0,0,0,,{\pos(1710,500) \fad(1000,500) \fs60} 如果x=0呢？
Dialogue: 0,0:00:59.12,0:01:02.82,ENG,,0,0,0,,and the astute among you might ask about what happens at X equals 0
Dialogue: 0,0:00:59.12,0:01:02.82,CHN,,0,0,0,,聪明的观众或许会问  当 X 等于零时会发生什么
Dialogue: 0,0:01:05.55,0:01:10.28,CHN,,0,0,0,,{\pos(170,600) \fad(1300,500) \fs60} 三明治定理!
Dialogue: 0,0:01:02.82,0:01:06.35,ENG,,0,0,0,,since when you plug that in, it looks like dividing zero by zero
Dialogue: 0,0:01:02.82,0:01:06.35,CHN,,0,0,0,,因为如果将其代入  表达式看起来是零除以零
Dialogue: 0,0:01:06.35,0:01:09.83,ENG,,0,0,0,,and then the even more astute among you may fresh out of a calculus class
Dialogue: 0,0:01:06.35,0:01:09.83,CHN,,0,0,0,,更聪明的宝子们  或许刚上完微积分课
Dialogue: 0,0:01:09.83,0:01:12.79,ENG,,0,0,0,,could point out that for values closer and closer to zero,
Dialogue: 0,0:01:09.83,0:01:12.79,CHN,,0,0,0,,可以指出  当自变量趋近于 0 时
Dialogue: 0,0:01:12.79,0:01:15.27,ENG,,0,0,0,,the function gets closer and closer to one.
Dialogue: 0,0:01:12.79,0:01:15.27,CHN,,0,0,0,,函数值趋近于 1
Dialogue: 0,0:01:15.27,0:01:18.86,ENG,,0,0,0,,So, if we simply redefine the sinc function at 0 to equal 1,
Dialogue: 0,0:01:15.27,0:01:18.86,CHN,,0,0,0,,所以我们只要将 0 处的函数值定义为 1
Dialogue: 0,0:01:18.86,0:01:20.95,ENG,,0,0,0,,you get a nice continuous curve.
Dialogue: 0,0:01:18.86,0:01:20.95,CHN,,0,0,0,,就能获得一个漂亮的连续曲线
Dialogue: 0,0:01:20.95,0:01:22.46,ENG,,0,0,0,,All of that is a little by the by
Dialogue: 0,0:01:20.95,0:01:22.46,CHN,,0,0,0,,上面有点跑题了
Dialogue: 0,0:01:22.46,0:01:24.45,ENG,,0,0,0,,because the thing we actually care about
Dialogue: 0,0:01:24.45,0:01:28.34,ENG,,0,0,0,,is the integral of this curve from -∞ to ∞.
Dialogue: 0,0:01:22.46,0:01:28.34,CHN,,0,0,0,,我们关心的其实是这条曲线在 −∞ 到 ∞ 上的积分
Dialogue: 0,0:01:28.34,0:01:32.05,ENG,,0,0,0,,Which you think of as meaning the area between the curve and the X axis,
Dialogue: 0,0:01:28.34,0:01:32.05,CHN,,0,0,0,,也就是说  这条曲线和 X 轴之间所夹的面积
Dialogue: 0,0:01:32.05,0:01:34.17,ENG,,0,0,0,,or more precisely the signed area.
Dialogue: 0,0:01:32.05,0:01:34.17,CHN,,0,0,0,,确切地说  带符号面积
Dialogue: 0,0:01:34.17,0:01:35.59,ENG,,0,0,0,,Meaning you add all the area
Dialogue: 0,0:01:35.59,0:01:38.47,ENG,,0,0,0,,bound by the positive parts of the graph in the X axis
Dialogue: 0,0:01:34.17,0:01:38.47,CHN,,0,0,0,,首先将所有 X 轴上方的面积相加
Dialogue: 0,0:01:38.47,0:01:39.78,ENG,,0,0,0,,and you subtract all of the parts
Dialogue: 0,0:01:39.78,0:01:42.65,ENG,,0,0,0,,found by the negative parts of the graph and the X axis.
Dialogue: 0,0:01:38.47,0:01:42.65,CHN,,0,0,0,,然后减去所有 X 轴下方的部分
Dialogue: 0,0:01:42.65,0:01:43.79,ENG,,0,0,0,,Like we saw at the start,
Dialogue: 0,0:01:42.65,0:01:43.79,CHN,,0,0,0,,如我们在开头所见
Dialogue: 0,0:01:43.79,0:01:47.39,ENG,,0,0,0,,it happens to be the case that this evaluates to be exactly π,
Dialogue: 0,0:01:43.79,0:01:47.39,CHN,,0,0,0,,它的值正好是 π
Dialogue: 0,0:01:47.75,0:01:53.41,CHN,,0,0,0,,{\an3 \pos(500,275) \fs55 \fad(500,0)} 真漂亮！
Dialogue: 0,0:01:49.11,0:01:53.41,CHN,,0,0,0,,{\an3 \pos(500,375) \fs55 \fad(500,0)} 但为什么呀？
Dialogue: 0,0:01:47.39,0:01:49.90,ENG,,0,0,0,,which is nice and also a little weird
Dialogue: 0,0:01:47.39,0:01:49.90,CHN,,0,0,0,,看起来很漂亮  也有些诡异
Dialogue: 0,0:01:49.90,0:01:52.03,ENG,,0,0,0,,and it's not entirely clear how you would approach this
Dialogue: 0,0:01:52.03,0:01:53.88,ENG,,0,0,0,,with the usual tools of calculus.
Dialogue: 0,0:01:49.90,0:01:53.88,CHN,,0,0,0,,用微积分的基本工具并不容易得出这个结果
Dialogue: 0,0:01:53.48,0:01:57.18,CHN,,0,0,0,,{\move(1700,470,1740,520,3000,3700) \fs60 \t(3000,3700,\fs80) \fad(1500,700)}我将在最后\N用到这个技巧
Dialogue: 0,0:01:56.51,0:01:58.85,CHN,,0,0,0,,{\move(1670,470,1710,510,0,700) \fs60 \t(0,700,\fs80) \fad(700,0)}但首先...
Dialogue: 0,0:01:53.88,0:01:56.79,ENG,,0,0,0,,Towards the end of the video, I'll share the trick for how you would do this.
Dialogue: 0,0:01:53.88,0:01:56.79,CHN,,0,0,0,,在视频最后  我会展示怎样计算这个积分
Dialogue: 0,0:01:56.79,0:01:58.94,ENG,,0,0,0,,Progressing on with the sequence I opened with,
Dialogue: 0,0:01:56.79,0:01:58.94,CHN,,0,0,0,,接着看开头给出的序列的下一项
Dialogue: 0,0:01:58.94,0:02:03.76,ENG,,0,0,0,,the next step is to take a copy of the sinc function where you plug in X/3,
Dialogue: 0,0:01:58.94,0:02:03.76,CHN,,0,0,0,,下一步是先复制一份代入 X/3 时 sinc 函数的值
Dialogue: 0,0:02:03.76,0:02:05.66,ENG,,0,0,0,,which will basically look like the same graph
Dialogue: 0,0:02:03.76,0:02:05.66,CHN,,0,0,0,,看起来就像是同一张图
Dialogue: 0,0:02:05.66,0:02:08.84,ENG,,0,0,0,,but stretched out horizontal by a factor of three.
Dialogue: 0,0:02:05.66,0:02:08.84,CHN,,0,0,0,,在水平方向上拉伸到了原来的三倍
Dialogue: 0,0:02:08.84,0:02:11.52,ENG,,0,0,0,,When we multiply these two functions together,
Dialogue: 0,0:02:08.84,0:02:11.52,CHN,,0,0,0,,再将这两个函数相乘
Dialogue: 0,0:02:11.52,0:02:13.49,ENG,,0,0,0,,we get a much more complicated wave
Dialogue: 0,0:02:11.52,0:02:13.49,CHN,,0,0,0,,就得到了一个更复杂的波形
Dialogue: 0,0:02:13.49,0:02:16.39,ENG,,0,0,0,,whose mass seems to be more concentrated towards the middle
Dialogue: 0,0:02:13.49,0:02:16.39,CHN,,0,0,0,,它与 X 轴所夹的面积看起来更加集中
Dialogue: 0,0:02:16.39,0:02:18.56,ENG,,0,0,0,,and with any usual functions, you would expect
Dialogue: 0,0:02:16.38,0:02:24.35,CHN,,0,0,0,,{\pos(1480,184) \fs60 \fad(1800,400)}面积改变了，\N对吧？
Dialogue: 0,0:02:18.56,0:02:20.24,ENG,,0,0,0,,this completely changes the area.
Dialogue: 0,0:02:16.39,0:02:20.24,CHN,,0,0,0,,如果是什么别的函数  你或许会认为面积改变了
Dialogue: 0,0:02:20.24,0:02:22.52,ENG,,0,0,0,,You can't just randomly modify an integral like this
Dialogue: 0,0:02:22.52,0:02:24.11,ENG,,0,0,0,,and expect nothing to change.
Dialogue: 0,0:02:20.24,0:02:24.11,CHN,,0,0,0,,像这样随意改变一个积分  很难使得结果不变
Dialogue: 0,0:02:24.11,0:02:26.05,ENG,,0,0,0,,So already, it's a little bit weird that
Dialogue: 0,0:02:24.11,0:02:26.05,CHN,,0,0,0,,现在开始变得奇怪了{\fsp-43.5}：
Dialogue: 0,0:02:26.05,0:02:29.05,ENG,,0,0,0,,this result also equals π, that nothing has changed.
Dialogue: 0,0:02:26.05,0:02:29.05,CHN,,0,0,0,,积分的结果仍然等于 π   没有发生变化
Dialogue: 0,0:02:29.05,0:02:31.54,ENG,,0,0,0,,That's another mystery you should add to your list.
Dialogue: 0,0:02:29.05,0:02:31.54,CHN,,0,0,0,,这是你应该记下的另一个疑点
Dialogue: 0,0:02:29.45,0:02:33.11,CHN,,0,0,0,,{\pos(390,245) \fs55 \fad(500,500)}又一个π，但为什么呀？
Dialogue: 0,0:02:31.54,0:02:33.36,ENG,,0,0,0,,And the next step in the sequence was to take
Dialogue: 0,0:02:31.54,0:02:33.36,CHN,,0,0,0,,序列中的下一项是
Dialogue: 0,0:02:33.36,0:02:36.95,ENG,,0,0,0,,an even more stretched out version of this sinc function by a factor of 5,
Dialogue: 0,0:02:33.36,0:02:36.95,CHN,,0,0,0,,将 sinc 函数拉伸到原来的五倍
Dialogue: 0,0:02:36.95,0:02:39.41,ENG,,0,0,0,,multiply that by what we already have
Dialogue: 0,0:02:36.95,0:02:39.41,CHN,,0,0,0,,再乘以上一次迭代的结果
Dialogue: 0,0:02:39.41,0:02:42.69,ENG,,0,0,0,,and again, look at the signed area underneath the whole curve,
Dialogue: 0,0:02:42.69,0:02:44.34,ENG,,0,0,0,,which again equals π.
Dialogue: 0,0:02:39.41,0:02:44.34,CHN,,0,0,0,,再看看曲线下方的带符号面积  仍然是 π
Dialogue: 0,0:02:45.01,0:02:47.51,ENG,,0,0,0,,And it continues on like this; with each iteration,
Dialogue: 0,0:02:45.01,0:02:47.51,CHN,,0,0,0,,以此类推  每一次迭代中
Dialogue: 0,0:02:47.51,0:02:49.26,ENG,,0,0,0,,we stretch out by a new odd number
Dialogue: 0,0:02:47.51,0:02:49.26,CHN,,0,0,0,,图像都被拉伸  比例为某奇数
Dialogue: 0,0:02:49.26,0:02:51.58,ENG,,0,0,0,,and multiply that into what we have.
Dialogue: 0,0:02:49.26,0:02:51.58,CHN,,0,0,0,,再乘以前面的结果
Dialogue: 0,0:02:51.58,0:02:55.13,ENG,,0,0,0,,One thing you might notice is how except that the input X equals 0,
Dialogue: 0,0:02:51.58,0:02:55.13,CHN,,0,0,0,,你或许会注意到  除 X=0 处以外
Dialogue: 0,0:02:55.13,0:02:56.83,ENG,,0,0,0,,every single part of this function
Dialogue: 0,0:02:55.13,0:02:56.83,CHN,,0,0,0,,这个函数上的每个点
Dialogue: 0,0:02:56.83,0:03:00.40,ENG,,0,0,0,,is progressively getting multiplied by something that's smaller than one.
Dialogue: 0,0:02:56.83,0:03:00.40,CHN,,0,0,0,,每次迭代都会乘上一个小于 1 的值
Dialogue: 0,0:03:00.40,0:03:01.18,ENG,,0,0,0,,So you would expect
Dialogue: 0,0:03:00.40,0:03:01.18,CHN,,0,0,0,,所以你会主张
Dialogue: 0,0:03:01.18,0:03:04.70,ENG,,0,0,0,,as the sequence progresses for things to get squished down more and more
Dialogue: 0,0:03:01.18,0:03:04.70,CHN,,0,0,0,,随着这个序列继续延伸  函数会进一步被纵向压缩
Dialogue: 0,0:03:04.70,0:03:08.28,ENG,,0,0,0,,and if anything, you would expect the area to be getting smaller.
Dialogue: 0,0:03:04.70,0:03:08.28,CHN,,0,0,0,,当然  面积也就随之变小
Dialogue: 0,0:03:08.28,0:03:10.82,ENG,,0,0,0,,Eventually, that is exactly what happens.
Dialogue: 0,0:03:08.28,0:03:10.82,CHN,,0,0,0,,最终  这确实发生了
Dialogue: 0,0:03:10.82,0:03:14.19,ENG,,0,0,0,,But what's bizarre is that it stays so stable for so long
Dialogue: 0,0:03:10.82,0:03:14.19,CHN,,0,0,0,,但很奇怪的是  它在如此长的时间内能保持不变
Dialogue: 0,0:03:14.19,0:03:18.19,ENG,,0,0,0,,and of course, more pertinently, that when it does break at the value 15
Dialogue: 0,0:03:14.19,0:03:18.19,CHN,,0,0,0,,更值得一提的是  当 15 打破这种规律的时候
Dialogue: 0,0:03:18.19,0:03:21.19,ENG,,0,0,0,,it does so by the tiniest tiny amount.
Dialogue: 0,0:03:18.19,0:03:21.19,CHN,,0,0,0,,计算结果与 π 的差异几乎微不足道
Dialogue: 0,0:03:21.19,0:03:24.06,ENG,,0,0,0,,And before you go thinking this is the result of some numerical error,
Dialogue: 0,0:03:21.19,0:03:24.06,CHN,,0,0,0,,你或许会认为这是由于数值误差
Dialogue: 0,0:03:24.06,0:03:26.76,ENG,,0,0,0,,maybe because we're doing something with floating point arithmetic,
Dialogue: 0,0:03:24.06,0:03:26.76,CHN,,0,0,0,,只是因为我们在做浮点运算
Dialogue: 0,0:03:26.76,0:03:28.59,ENG,,0,0,0,,if you work this out more precisely,
Dialogue: 0,0:03:26.76,0:03:28.59,CHN,,0,0,0,,但如果你求出这个式子的精确值
Dialogue: 0,0:03:28.59,0:03:31.30,ENG,,0,0,0,,here is the exact value of that last integral,
Dialogue: 0,0:03:28.59,0:03:31.30,CHN,,0,0,0,,也就是这个值
Dialogue: 0,0:03:31.30,0:03:33.43,ENG,,0,0,0,,which is a certain fraction of π
Dialogue: 0,0:03:31.30,0:03:33.43,CHN,,0,0,0,,是 π 的分数倍
Dialogue: 0,0:03:33.43,0:03:35.99,ENG,,0,0,0,,where the numerator and the denominator are absurd.
Dialogue: 0,0:03:33.43,0:03:35.99,CHN,,0,0,0,,其中分子和分母看起来都荒诞不经
Dialogue: 0,0:03:35.99,0:03:39.28,ENG,,0,0,0,,They're both around 400 billion billion billion.
Dialogue: 0,0:03:35.99,0:03:39.28,CHN,,0,0,0,,足足有大约46穰
Dialogue: 0,0:03:35.99,0:03:39.28,CHN,,0,0,0,,{\an1\fs45}穰：中国传统大数单位，\N在万进系统下等于10²⁸即“万亿亿亿”
Dialogue: 0,0:03:40.48,0:03:42.39,ENG,,0,0,0,,So, this pattern was described in a paper
Dialogue: 0,0:03:40.48,0:03:42.39,CHN,,0,0,0,,这种规律被写进了一篇论文中
Dialogue: 0,0:03:42.39,0:03:46.23,ENG,,0,0,0,,by a father-son pair: Jonathan and David Borwein, which is very fun,
Dialogue: 0,0:03:42.39,0:03:46.23,CHN,,0,0,0,,作者是一对父子档  乔纳森·博温和大卫·博温
Dialogue: 0,0:03:46.23,0:03:48.10,ENG,,0,0,0,,and they mentioned how when a fellow researcher
Dialogue: 0,0:03:46.23,0:03:48.10,CHN,,0,0,0,,他们提到  当一位同事
Dialogue: 0,0:03:48.10,0:03:51.30,ENG,,0,0,0,,was computing these integrals using a computer algebra system,
Dialogue: 0,0:03:48.10,0:03:51.30,CHN,,0,0,0,,用计算机代数系统（CAS）计算这些积分时
Dialogue: 0,0:03:51.30,0:03:54.02,ENG,,0,0,0,,he assumed that this had to be some kind of bug!
Dialogue: 0,0:03:51.30,0:03:54.02,CHN,,0,0,0,,他认为这一定是系统出了 bug
Dialogue: 0,0:03:54.02,0:03:56.64,ENG,,0,0,0,,But it's not a bug, it is a real phenomenon.
Dialogue: 0,0:03:54.02,0:03:56.64,CHN,,0,0,0,,但这不是 bug   这是一个真实存在的现象
Dialogue: 0,0:03:56.64,0:03:58.40,ENG,,0,0,0,,And it gets weirder than that actually -
Dialogue: 0,0:03:56.64,0:03:58.40,CHN,,0,0,0,,事实上它可以会变得更奇怪
Dialogue: 0,0:03:58.40,0:04:03.12,ENG,,0,0,0,,if we take all these integrals and include yet another factor 2cos(x)
Dialogue: 0,0:03:58.40,0:04:03.12,CHN,,0,0,0,,如果我们给这些积分都乘上一个 2cos(x)
Dialogue: 0,0:04:03.12,0:04:05.70,ENG,,0,0,0,,which again, you would think changes their values entirely -
Dialogue: 0,0:04:03.12,0:04:05.70,CHN,,0,0,0,,你肯定又以为结果会变
Dialogue: 0,0:04:04.78,0:04:11.21,CHN,,0,0,0,,{\pos(1300,300) \an2 \fs50 \fad(400,400)}图几乎没有变化
Dialogue: 0,0:04:05.70,0:04:08.84,ENG,,0,0,0,,you can't just randomly multiply new things into an intergral like this,
Dialogue: 0,0:04:05.70,0:04:08.84,CHN,,0,0,0,,毕竟，积分式里怎么能随便乘东西呢
Dialogue: 0,0:04:08.84,0:04:11.38,ENG,,0,0,0,,it continues to equal π for much much longer
Dialogue: 0,0:04:08.84,0:04:11.38,CHN,,0,0,0,,但它的结果居然还是 π  甚至持续了更久
Dialogue: 0,0:04:11.38,0:04:14.38,ENG,,0,0,0,,and it's not until you get to the number 113 that it breaks.
Dialogue: 0,0:04:11.38,0:04:14.38,CHN,,0,0,0,,直到达到 113   这种规律才被打破
Dialogue: 0,0:04:14.38,0:04:15.26,ENG,,0,0,0,,And when it breaks,
Dialogue: 0,0:04:15.26,0:04:19.84,ENG,,0,0,0,,it's by the most puny absolutely subtle amount that you could imagine.
Dialogue: 0,0:04:14.38,0:04:19.84,CHN,,0,0,0,,这时真实值与 π 之间的差异小到难以想象
Dialogue: 0,0:04:14.38,0:04:27.85,CHN,,0,0,0,,{\pos(1610,900) \fs40 \fad(1800,0)}一个我的计算机无法在\N合理时间内计算的极小的正数
Dialogue: 0,0:04:20.42,0:04:24.44,ENG,,0,0,0,,So, the natural question is - what on earth is going on here?
Dialogue: 0,0:04:20.42,0:04:24.44,CHN,,0,0,0,,接下来  很自然的问题是  这到底是为什么
Dialogue: 0,0:04:20.25,0:04:27.81,ENG,,0,0,0,,{\pos(130,230) \fs70} 这到底是\N为什么？
Dialogue: 0,0:04:24.44,0:04:28.18,ENG,,0,0,0,,And luckily there actually is a really satisfying explanation for all this.
Dialogue: 0,0:04:24.44,0:04:28.18,CHN,,0,0,0,,幸运的是  这里有一个非常令人满意的解释
Dialogue: 0,0:04:29.05,0:04:48.85,CHN,,0,0,0,,{\an1\pos(280,260) \fs55 \fad(600,0)}一个简化的类比
Dialogue: 0,0:04:42.21,0:04:48.85,CHN,,0,0,0,,{\an1\pos(1220,260) \fs55 \fad(600,0)}从类比延伸来解释
Dialogue: 0,0:04:28.18,0:04:29.51,ENG,,0,0,0,,The way I think I'll go about this
Dialogue: 0,0:04:28.18,0:04:29.51,CHN,,0,0,0,,我将通过迂回的方式告诉你们为什么
Dialogue: 0,0:04:29.51,0:04:33.00,ENG,,0,0,0,,is to show you a phenomenon that first looks completely unrelated
Dialogue: 0,0:04:29.51,0:04:33.00,CHN,,0,0,0,,首先我会展示一个现象  看起来毫无瓜葛
Dialogue: 0,0:04:33.00,0:04:34.87,ENG,,0,0,0,,but it shows a similar pattern
Dialogue: 0,0:04:33.00,0:04:34.87,CHN,,0,0,0,,但是出现了类似的规律
Dialogue: 0,0:04:34.87,0:04:38.77,ENG,,0,0,0,,where you have a value that stays really stable until you get to number 15
Dialogue: 0,0:04:34.87,0:04:38.77,CHN,,0,0,0,,同样有个一直稳定不变的值  直到 15
Dialogue: 0,0:04:38.77,0:04:41.17,ENG,,0,0,0,,and then it falters by just a tiny amount.
Dialogue: 0,0:04:38.77,0:04:41.17,CHN,,0,0,0,,然后同样出现了极小的差值
Dialogue: 0,0:04:41.17,0:04:44.98,ENG,,0,0,0,,And then after that, I'll show why this seemingly unrelated phenomenon
Dialogue: 0,0:04:41.17,0:04:44.98,CHN,,0,0,0,,然后  我会告诉你为什么这个貌似无关的现象
Dialogue: 0,0:04:44.98,0:04:48.99,ENG,,0,0,0,,is secretly the same as all our integral expressions but in disguise.
Dialogue: 0,0:04:44.98,0:04:48.99,CHN,,0,0,0,,居然跟我们的积分式完全一致，只是换了副嘴脸
Dialogue: 0,0:04:48.85,0:04:51.71,CHN,,0,0,0,,{\pos(960,440) }滑动窗口平均值
Dialogue: 0,0:04:48.99,0:04:51.87,ENG,,0,0,0,,So, turning our attention to what seems completely different -
Dialogue: 0,0:04:48.99,0:04:51.87,CHN,,0,0,0,,现在  让我们把目光从原来的问题上移开
Dialogue: 0,0:04:51.87,0:04:55.13,ENG,,0,0,0,,consider a function that I'm going to be calling rect(x)
Dialogue: 0,0:04:51.87,0:04:55.13,CHN,,0,0,0,,考虑一个我称为 rect(x) 的函数
Dialogue: 0,0:04:55.13,0:05:00.55,ENG,,0,0,0,,which is defined to equal 1 if the input is between -1/2 and 1/2
Dialogue: 0,0:04:55.13,0:05:00.55,CHN,,0,0,0,,当输入在 -1/2 和 1/2 之间时  它的取值恒为 1
Dialogue: 0,0:05:00.55,0:05:02.25,ENG,,0,0,0,,and otherwise it's equal to 0.
Dialogue: 0,0:05:00.55,0:05:02.25,CHN,,0,0,0,,否则为 0
Dialogue: 0,0:05:02.25,0:05:05.09,ENG,,0,0,0,,So, the function is this boring step basically.
Dialogue: 0,0:05:02.25,0:05:05.09,CHN,,0,0,0,,就是这个无趣的阶梯函数
Dialogue: 0,0:05:05.09,0:05:07.93,ENG,,0,0,0,,This will be the first in a sequence of function that we define,
Dialogue: 0,0:05:05.09,0:05:07.93,CHN,,0,0,0,,这将是我们定义的函数列的第一项
Dialogue: 0,0:05:05.35,0:05:10.25,CHN,,0,0,0,,{\pos(590,280) \fad(1800,400) \fs60}函数列中\N的第一项
Dialogue: 0,0:05:07.93,0:05:09.67,ENG,,0,0,0,,so I'll call it f₁(x)
Dialogue: 0,0:05:07.93,0:05:09.67,CHN,,0,0,0,,因此我将其记为 f₁(x)
Dialogue: 0,0:05:09.67,0:05:11.99,ENG,,0,0,0,,and each new function in our sequence is going to be
Dialogue: 0,0:05:09.67,0:05:11.99,CHN,,0,0,0,,我们的序列中的每个新函数
Dialogue: 0,0:05:11.99,0:05:14.98,ENG,,0,0,0,,a kind of moving average of the previous function.
Dialogue: 0,0:05:11.99,0:05:14.98,CHN,,0,0,0,,都定义为前一个函数在某个滑动窗口内的均值
Dialogue: 0,0:05:15.74,0:05:18.18,ENG,,0,0,0,,So, for example, the way the second iteration will be defined
Dialogue: 0,0:05:15.74,0:05:18.18,CHN,,0,0,0,,例如  第二个函数的定义如下
Dialogue: 0,0:05:18.18,0:05:21.55,ENG,,0,0,0,,is to take this sliding window whose width is 1/3
Dialogue: 0,0:05:18.18,0:05:21.55,CHN,,0,0,0,,取这个宽度为 1/3 的窗口
Dialogue: 0,0:05:21.55,0:05:26.19,ENG,,0,0,0,,and for a particular input X, when the window is centred at that input X,
Dialogue: 0,0:05:21.55,0:05:26.19,CHN,,0,0,0,,它的中心在输入 X 的位置上
Dialogue: 0,0:05:26.19,0:05:28.98,ENG,,0,0,0,,the value in my new function drawn below
Dialogue: 0,0:05:26.19,0:05:28.98,CHN,,0,0,0,,新函数的值  如下图所示
Dialogue: 0,0:05:28.98,0:05:31.40,ENG,,0,0,0,,is defined to be equal to the average value
Dialogue: 0,0:05:28.98,0:05:31.40,CHN,,0,0,0,,被定义为第一个函数
Dialogue: 0,0:05:30.98,0:05:35.08,CHN,,0,0,0,,{\pos(420,650)\fs55 \fad(600,600)}这个窗口的平均值
Dialogue: 0,0:05:31.40,0:05:34.20,ENG,,0,0,0,,of the first function above inside that window.
Dialogue: 0,0:05:31.40,0:05:34.20,CHN,,0,0,0,,在这个窗口中的平均值
Dialogue: 0,0:05:34.20,0:05:36.42,ENG,,0,0,0,,So, for example when the window is far enough to the left,
Dialogue: 0,0:05:34.20,0:05:36.42,CHN,,0,0,0,,比如  现在这个窗口在左侧
Dialogue: 0,0:05:36.42,0:05:38.12,ENG,,0,0,0,,every value inside it is zero,
Dialogue: 0,0:05:36.42,0:05:38.12,CHN,,0,0,0,,里面的所有值都是零
Dialogue: 0,0:05:38.12,0:05:40.23,ENG,,0,0,0,,so the graph on the bottom is showing zero.
Dialogue: 0,0:05:38.12,0:05:40.23,CHN,,0,0,0,,因此下面的图像里对应的点为 0
Dialogue: 0,0:05:40.23,0:05:43.21,ENG,,0,0,0,,As soon as that window starts to go over the plateau a little bit,
Dialogue: 0,0:05:40.23,0:05:43.21,CHN,,0,0,0,,一旦窗口开始攀爬“台地”
Dialogue: 0,0:05:43.21,0:05:45.60,ENG,,0,0,0,,the average value is a little more than zero
Dialogue: 0,0:05:43.21,0:05:45.60,CHN,,0,0,0,,平均值就会稍大于零
Dialogue: 0,0:05:45.60,0:05:47.25,ENG,,0,0,0,,and you see that in the graph below.
Dialogue: 0,0:05:45.60,0:05:47.25,CHN,,0,0,0,,在下面的图中  你也可以观察到这一点
Dialogue: 0,0:05:47.25,0:05:50.60,ENG,,0,0,0,,And notice that when exactly half the window is over that plateau at one
Dialogue: 0,0:05:47.25,0:05:50.60,CHN,,0,0,0,,注意  当正好一半的窗口里函数值全为 1
Dialogue: 0,0:05:50.60,0:05:52.39,ENG,,0,0,0,,and half of it is at zero,
Dialogue: 0,0:05:50.60,0:05:52.39,CHN,,0,0,0,,另一半全为 0 时
Dialogue: 0,0:05:52.39,0:05:55.19,ENG,,0,0,0,,the corresponding value in the bottom graph is one half
Dialogue: 0,0:05:52.39,0:05:55.19,CHN,,0,0,0,,下面的图中对应的值为 1/2
Dialogue: 0,0:05:55.19,0:05:56.63,ENG,,0,0,0,,and you get the point.
Dialogue: 0,0:05:55.19,0:05:56.63,CHN,,0,0,0,,现在你应该懂了
Dialogue: 0,0:05:56.63,0:05:58.43,ENG,,0,0,0,,The important thing I want you to focus on
Dialogue: 0,0:05:56.63,0:05:58.43,CHN,,0,0,0,,请你留意一下这里的重点{\fsp-43.5}：
Dialogue: 0,0:05:58.43,0:06:01.92,ENG,,0,0,0,,is how when that window is entirely in the plateau above
Dialogue: 0,0:06:01.92,0:06:03.21,ENG,,0,0,0,,where all the values are one,
Dialogue: 0,0:05:58.43,0:06:03.21,CHN,,0,0,0,,当上面整个窗口都处于值恒为 1 的平稳段时
Dialogue: 0,0:06:03.21,0:06:05.48,ENG,,0,0,0,,then the average value is also one,
Dialogue: 0,0:06:03.21,0:06:05.48,CHN,,0,0,0,,下面得到的均值也是 1
Dialogue: 0,0:06:05.48,0:06:08.23,ENG,,0,0,0,,so we get this plateau on our function at the bottom.
Dialogue: 0,0:06:05.48,0:06:08.23,CHN,,0,0,0,,所以下面这个函数就有了这样一段平稳段
Dialogue: 0,0:06:08.23,0:06:10.78,ENG,,0,0,0,,Let's call this bottom function f₂(x)
Dialogue: 0,0:06:08.23,0:06:10.78,CHN,,0,0,0,,如果我们把下面这个函数叫做 f₂(x)
Dialogue: 0,0:06:10.78,0:06:12.36,ENG,,0,0,0,,and what I want you to think about
Dialogue: 0,0:06:10.78,0:06:12.36,CHN,,0,0,0,,我想让你思考一下
Dialogue: 0,0:06:12.36,0:06:15.43,ENG,,0,0,0,,is the length of the plateau for that second function.
Dialogue: 0,0:06:12.36,0:06:15.43,CHN,,0,0,0,,下面这个平稳段的长度
Dialogue: 0,0:06:15.43,0:06:16.99,ENG,,0,0,0,,How wide it should be?
Dialogue: 0,0:06:15.43,0:06:16.99,CHN,,0,0,0,,它有多长呢
Dialogue: 0,0:06:16.99,0:06:18.62,ENG,,0,0,0,,If you think about it for a moment,
Dialogue: 0,0:06:16.99,0:06:18.62,CHN,,0,0,0,,稍加思考就会发现
Dialogue: 0,0:06:18.62,0:06:21.56,ENG,,0,0,0,,the distance between the left edge of the top plateau
Dialogue: 0,0:06:21.56,0:06:23.63,ENG,,0,0,0,,and the left edge of the bottom plateau
Dialogue: 0,0:06:18.62,0:06:23.63,CHN,,0,0,0,,上下两个函数的平稳段  左边界的距离
Dialogue: 0,0:06:23.63,0:06:27.67,ENG,,0,0,0,,will be exactly half of the width of the window. So, half of one third.
Dialogue: 0,0:06:23.63,0:06:27.67,CHN,,0,0,0,,正好是窗口宽度 1/3 的一半
Dialogue: 0,0:06:27.67,0:06:29.55,ENG,,0,0,0,,And similarly on the right side,
Dialogue: 0,0:06:27.67,0:06:29.55,CHN,,0,0,0,,而对右边来说也一样
Dialogue: 0,0:06:29.55,0:06:33.03,ENG,,0,0,0,,the distance between the edges of the plateaus is half of the window width.
Dialogue: 0,0:06:29.55,0:06:33.03,CHN,,0,0,0,,两个函数右边界的距离也是窗口宽度的一半
Dialogue: 0,0:06:33.03,0:06:37.47,ENG,,0,0,0,,So, overall, it's one minus that window width, which is one minus a third.
Dialogue: 0,0:06:33.03,0:06:37.47,CHN,,0,0,0,,两边合起来  答案就是1减去窗口宽度  即1-1/3
Dialogue: 0,0:06:37.47,0:06:39.06,ENG,,0,0,0,,The value we're going to be computing,
Dialogue: 0,0:06:37.47,0:06:39.06,CHN,,0,0,0,,我们接下来要算的这个
Dialogue: 0,0:06:39.06,0:06:42.15,ENG,,0,0,0,,the thing that will look stable for a while before it breaks
Dialogue: 0,0:06:39.06,0:06:42.15,CHN,,0,0,0,,一开始看上去稳定  而再往后就开始改变的值
Dialogue: 0,0:06:42.15,0:06:44.71,ENG,,0,0,0,,is the value of this function at the input zero,
Dialogue: 0,0:06:42.15,0:06:44.71,CHN,,0,0,0,,正是这个函数在 0 处的取值
Dialogue: 0,0:06:44.71,0:06:47.22,ENG,,0,0,0,,which in both of these iterations is equal to one
Dialogue: 0,0:06:44.71,0:06:47.22,CHN,,0,0,0,,例如在这两个函数里都是 1
Dialogue: 0,0:06:47.22,0:06:49.20,ENG,,0,0,0,,because it's inside that plateau.
Dialogue: 0,0:06:47.22,0:06:49.20,CHN,,0,0,0,,因为 0 都处在这段平稳段里
Dialogue: 0,0:06:49.20,0:06:50.38,ENG,,0,0,0,,For the next iteration,
Dialogue: 0,0:06:50.38,0:06:53.06,ENG,,0,0,0,,we're going to take a moving average of that last function
Dialogue: 0,0:06:49.20,0:06:53.06,CHN,,0,0,0,,下一轮迭代会计算 f₂(x) 的滑动平均值
Dialogue: 0,0:06:53.06,0:06:56.00,ENG,,0,0,0,,but this time with the window whose width is one fifth.
Dialogue: 0,0:06:53.06,0:06:56.00,CHN,,0,0,0,,但是窗口宽度只有 1/5 个单位
Dialogue: 0,0:06:56.00,0:06:59.05,ENG,,0,0,0,,It's kind of fun to think about why as you slide around this window,
Dialogue: 0,0:06:56.00,0:06:59.05,CHN,,0,0,0,,你可以琢磨一下  为何滑动窗口从左到右走一遍
Dialogue: 0,0:06:59.05,0:07:01.99,ENG,,0,0,0,,you get a smooth out version of the previous function
Dialogue: 0,0:06:59.05,0:07:01.99,CHN,,0,0,0,,得到的新函数会比原函数更光滑
Dialogue: 0,0:07:01.99,0:07:04.71,ENG,,0,0,0,,and again, the significant thing I want you to focus on
Dialogue: 0,0:07:01.99,0:07:04.71,CHN,,0,0,0,,但我想让你关注的重点依旧是
Dialogue: 0,0:07:04.71,0:07:08.81,ENG,,0,0,0,,is how when that window is entirely inside the plateau of the previous function,
Dialogue: 0,0:07:04.71,0:07:08.81,CHN,,0,0,0,,窗口在什么时候  完全处于原函数的平稳段上
Dialogue: 0,0:07:08.81,0:07:12.02,ENG,,0,0,0,,then, by definition, the bottom function is going to equal one.
Dialogue: 0,0:07:08.81,0:07:12.02,CHN,,0,0,0,,因为按照定义  此时下面的函数值等于 1
Dialogue: 0,0:07:12.02,0:07:14.35,ENG,,0,0,0,,This time, the length of that plateau on the bottom
Dialogue: 0,0:07:12.02,0:07:14.35,CHN,,0,0,0,,而这次下面这个函数的这个平稳段
Dialogue: 0,0:07:14.35,0:07:17.67,ENG,,0,0,0,,will be the length of the previous one, 1-1/3
Dialogue: 0,0:07:14.35,0:07:17.67,CHN,,0,0,0,,长度则是前一个函数平稳段的长度 1-1/3
Dialogue: 0,0:07:17.67,0:07:19.63,ENG,,0,0,0,,minus the window width, 1/5th.
Dialogue: 0,0:07:17.67,0:07:19.63,CHN,,0,0,0,,再减去窗口的宽度 1/5
Dialogue: 0,0:07:19.63,0:07:21.47,ENG,,0,0,0,,The reasoning is the same as before -
Dialogue: 0,0:07:19.63,0:07:21.47,CHN,,0,0,0,,原因和之前一样
Dialogue: 0,0:07:21.47,0:07:22.97,ENG,,0,0,0,,in order to go from the point where
Dialogue: 0,0:07:22.97,0:07:25.30,ENG,,0,0,0,,the middle of the window is on that top plateau
Dialogue: 0,0:07:21.47,0:07:25.30,CHN,,0,0,0,,要从“窗口中点在平稳段左端点”的位置
Dialogue: 0,0:07:25.30,0:07:28.13,ENG,,0,0,0,,to where the entirety of the window is inside that plateau
Dialogue: 0,0:07:25.30,0:07:28.13,CHN,,0,0,0,,走到“整个窗完全进入平稳段里”的地方
Dialogue: 0,0:07:28.13,0:07:29.41,ENG,,0,0,0,,is half the window width
Dialogue: 0,0:07:28.13,0:07:29.41,CHN,,0,0,0,,正好是半个窗口的长度
Dialogue: 0,0:07:29.41,0:07:31.30,ENG,,0,0,0,,and likewise on the right side.
Dialogue: 0,0:07:29.41,0:07:31.30,CHN,,0,0,0,,右半边也一样
Dialogue: 0,0:07:31.30,0:07:32.96,ENG,,0,0,0,,And once more, the value to record
Dialogue: 0,0:07:31.30,0:07:32.96,CHN,,0,0,0,,而我们要记下来的
Dialogue: 0,0:07:32.96,0:07:35.68,ENG,,0,0,0,,is the output of this function when the input is zero.
Dialogue: 0,0:07:32.96,0:07:35.68,CHN,,0,0,0,,则是这个函数在自变量为 0 时的取值
Dialogue: 0,0:07:35.68,0:07:37.72,ENG,,0,0,0,,Which again, is exactly one.
Dialogue: 0,0:07:35.68,0:07:37.72,CHN,,0,0,0,,还是 1
Dialogue: 0,0:07:38.63,0:07:42.02,ENG,,0,0,0,,The next iteration is a moving average with the window width of 1/7 -
Dialogue: 0,0:07:38.63,0:07:42.02,CHN,,0,0,0,,再往下一轮  我们用 1/7 的窗口宽度来计算滑动平均
Dialogue: 0,0:07:42.02,0:07:44.42,ENG,,0,0,0,,the plateau gets smaller by that 1/7.
Dialogue: 0,0:07:42.02,0:07:44.42,CHN,,0,0,0,,那这样平稳段也就短了 1/7
Dialogue: 0,0:07:44.42,0:07:48.53,ENG,,0,0,0,,Doing one more iteration with 1/9, the plateau gets smaller by that amount.
Dialogue: 0,0:07:44.42,0:07:48.53,CHN,,0,0,0,,再用 1/9 的窗口宽度迭代一轮  平稳段也缩短了 1/9
Dialogue: 0,0:07:48.53,0:07:51.18,ENG,,0,0,0,,And as we keep going, the plateau gets thinner and thinner.
Dialogue: 0,0:07:48.53,0:07:51.18,CHN,,0,0,0,,随着轮数逐渐增加  平稳段越来越短
Dialogue: 0,0:07:52.13,0:07:54.87,ENG,,0,0,0,,And also, notice how just outside of the plateau,
Dialogue: 0,0:07:52.13,0:07:54.87,CHN,,0,0,0,,此外  在平稳段稍微往外的位置
Dialogue: 0,0:07:54.87,0:07:56.74,ENG,,0,0,0,,the function is really really close to one,
Dialogue: 0,0:07:54.87,0:07:56.74,CHN,,0,0,0,,函数值会非常非常接近 1
Dialogue: 0,0:07:56.74,0:07:58.70,ENG,,0,0,0,,because it's always been the result of an average
Dialogue: 0,0:07:56.74,0:07:58.70,CHN,,0,0,0,,因为这是不断把平稳段的 1
Dialogue: 0,0:07:58.70,0:08:00.94,ENG,,0,0,0,,between the plateau at one and the neighbours,
Dialogue: 0,0:07:58.70,0:08:00.94,CHN,,0,0,0,,和它十分十分接近 1 的邻近值
Dialogue: 0,0:08:00.94,0:08:03.41,ENG,,0,0,0,,which themselves are really really close to one.
Dialogue: 0,0:08:00.94,0:08:03.41,CHN,,0,0,0,,不断取平均的结果
Dialogue: 0,0:08:03.41,0:08:05.31,ENG,,0,0,0,,The point at which all of this breaks
Dialogue: 0,0:08:03.41,0:08:05.31,CHN,,0,0,0,,f(0)=1 的规律被打破的时间
Dialogue: 0,0:08:05.31,0:08:06.74,ENG,,0,0,0,,is once we get to the iteration
Dialogue: 0,0:08:05.31,0:08:06.74,CHN,,0,0,0,,是在我们迭代到
Dialogue: 0,0:08:06.74,0:08:11.02,ENG,,0,0,0,,where we're sliding a window with width 1/15th across the whole thing.
Dialogue: 0,0:08:06.74,0:08:11.02,CHN,,0,0,0,,用 1/15 的窗口宽度滑动时
Dialogue: 0,0:08:11.02,0:08:12.62,ENG,,0,0,0,,At that point, the previous plateau
Dialogue: 0,0:08:11.02,0:08:12.62,CHN,,0,0,0,,到了这一轮  上面的平稳段
Dialogue: 0,0:08:12.62,0:08:14.86,ENG,,0,0,0,,is actually thinner than the window itself.
Dialogue: 0,0:08:12.62,0:08:14.86,CHN,,0,0,0,,已经短于窗口本身了
Dialogue: 0,0:08:14.86,0:08:17.07,ENG,,0,0,0,,So, even at the input X=0,
Dialogue: 0,0:08:14.86,0:08:17.07,CHN,,0,0,0,,因此  即使自变量x=0
Dialogue: 0,0:08:17.07,0:08:21.05,ENG,,0,0,0,,this moving average have to be ever so slightly smaller than one.
Dialogue: 0,0:08:17.07,0:08:21.05,CHN,,0,0,0,,滑动平均还是会比 1 小那么一点点
Dialogue: 0,0:08:21.05,0:08:24.11,ENG,,0,0,0,,And the only thing that's special about the number 15 here is that
Dialogue: 0,0:08:21.05,0:08:24.11,CHN,,0,0,0,,而 15 这个数的特殊之处  无非在于
Dialogue: 0,0:08:24.11,0:08:26.86,ENG,,0,0,0,,as we keep adding the reciprocals of these odd fractions -
Dialogue: 0,0:08:24.11,0:08:26.86,CHN,,0,0,0,,当我们累加奇数的倒数和
Dialogue: 0,0:08:26.86,0:08:29.67,ENG,,0,0,0,,1/3 plus 1/5th plus 1/7th, on and on,
Dialogue: 0,0:08:26.86,0:08:29.67,CHN,,0,0,0,,也就是 1/3+1/5+1/7 这样加下去时
Dialogue: 0,0:08:29.67,0:08:33.61,ENG,,0,0,0,,it's once we get to 1/15th that that sum grows to be bigger than one
Dialogue: 0,0:08:29.67,0:08:33.61,CHN,,0,0,0,,加到 1/15 这个和刚好比 1 大
Dialogue: 0,0:08:33.61,0:08:35.85,ENG,,0,0,0,,and in the context of our shrinking plateaus,
Dialogue: 0,0:08:33.61,0:08:35.85,CHN,,0,0,0,,从缩短平稳段的视角来看
Dialogue: 0,0:08:35.85,0:08:38.30,ENG,,0,0,0,,having started with a plateau of width one,
Dialogue: 0,0:08:35.85,0:08:38.30,CHN,,0,0,0,,原本宽度为 1 的平稳段
Dialogue: 0,0:08:38.30,0:08:41.75,ENG,,0,0,0,,it's now shrunk down so much that it will disappear entirely.
Dialogue: 0,0:08:38.30,0:08:41.75,CHN,,0,0,0,,到这里就沦落到渣都不剩了
Dialogue: 0,0:08:41.75,0:08:44.29,ENG,,0,0,0,,The point is, with this as a sequence of functions
Dialogue: 0,0:08:41.75,0:08:44.29,CHN,,0,0,0,,总的来说就是  对于这串
Dialogue: 0,0:08:44.29,0:08:47.16,ENG,,0,0,0,,that we've defined by seemingly random procedure,
Dialogue: 0,0:08:44.29,0:08:47.16,CHN,,0,0,0,,看上去定义得很随便的函数序列
Dialogue: 0,0:08:47.16,0:08:50.92,ENG,,0,0,0,,if I ask you to compute the values of all of these functions at the input zero,
Dialogue: 0,0:08:47.16,0:08:50.92,CHN,,0,0,0,,如果计算每个函数在x=0处的函数值
Dialogue: 0,0:08:50.92,0:08:52.99,ENG,,0,0,0,,you get a pattern which initially looks stable,
Dialogue: 0,0:08:50.92,0:08:52.99,CHN,,0,0,0,,会得到一个  最开始很稳定的规律
Dialogue: 0,0:08:52.99,0:08:55.37,ENG,,0,0,0,,it's one, one, one, one, one, one, one
Dialogue: 0,0:08:54.77,0:08:55.37,CHN,,0,0,0,,算出来全是 1 1 1 1 1 1 1
Dialogue: 0,0:08:55.37,0:08:57.46,ENG,,0,0,0,,but by the time we get to the eighth iteration,
Dialogue: 0,0:08:55.37,0:08:57.46,CHN,,0,0,0,,但到第八轮迭代时
Dialogue: 0,0:08:57.46,0:09:00.31,ENG,,0,0,0,,it falls short ever so slightly, just barely.
Dialogue: 0,0:08:57.46,0:09:00.31,CHN,,0,0,0,,得出的结果就会比 1 小就那么一丁点
Dialogue: 0,0:09:00.98,0:09:01.95,ENG,,0,0,0,,This is analogous,
Dialogue: 0,0:09:00.98,0:09:01.95,CHN,,0,0,0,,这是不是很像
Dialogue: 0,0:09:01.95,0:09:05.61,ENG,,0,0,0,,and I claim more than just analogous to the integrals we saw earlier,
Dialogue: 0,0:09:01.95,0:09:05.61,CHN,,0,0,0,,(其实不止是像而已) 之前提到的那个积分的问题
Dialogue: 0,0:09:05.61,0:09:08.24,ENG,,0,0,0,,where you have a stable value at π, π, π, π, π
Dialogue: 0,0:09:05.61,0:09:08.24,CHN,,0,0,0,,一开始有一串稳定的 π π π π π
Dialogue: 0,0:09:08.24,0:09:10.24,ENG,,0,0,0,,until it falls short just barely.
Dialogue: 0,0:09:08.24,0:09:10.24,CHN,,0,0,0,,但最后会比 π 小那么一点点
Dialogue: 0,0:09:12.01,0:09:18.31,CHN,,0,0,0,,{\pos(1680,630) \fs55 \fad(1000,800) \1c&H00FFFF&}这个常数
Dialogue: 0,0:09:17.51,0:09:25.38,CHN,,0,0,0,,{\pos(1680,630) \fs55 \fad(800,0) \1c&H00FFFF&}相同常数
Dialogue: 0,0:09:10.24,0:09:14.18,ENG,,0,0,0,,And as it happens, this constant from our moving average process
Dialogue: 0,0:09:10.24,0:09:14.18,CHN,,0,0,0,,而且  我们通过反复算滑动平均得到的这个
Dialogue: 0,0:09:14.18,0:09:16.22,ENG,,0,0,0,,that's ever so slightly smaller than one
Dialogue: 0,0:09:14.18,0:09:16.22,CHN,,0,0,0,,比 1 小那么一丁点的数
Dialogue: 0,0:09:16.22,0:09:20.37,ENG,,0,0,0,,is exactly the factor that sits in front of π in our series of integrals.
Dialogue: 0,0:09:16.22,0:09:20.37,CHN,,0,0,0,,恰好是积分问题里  在π前面的系数
Dialogue: 0,0:09:20.37,0:09:22.99,ENG,,0,0,0,,So, the two situations aren't just qualitatively similar,
Dialogue: 0,0:09:20.37,0:09:22.99,CHN,,0,0,0,,所以  这两个情形不只是定性的相近
Dialogue: 0,0:09:22.99,0:09:25.42,ENG,,0,0,0,,they're quantitatively the same as well.
Dialogue: 0,0:09:22.99,0:09:25.42,CHN,,0,0,0,,而是定量的相同
Dialogue: 0,0:09:25.42,0:09:26.66,ENG,,0,0,0,,And when it comes to the case
Dialogue: 0,0:09:26.66,0:09:29.98,ENG,,0,0,0,,where we add the 2 cosine of X term inside the integral,
Dialogue: 0,0:09:25.42,0:09:29.98,CHN,,0,0,0,,而如果对被积函数多乘个 2cosX
Dialogue: 0,0:09:29.98,0:09:33.10,ENG,,0,0,0,,which cause the pattern to last a lot longer before it broke down,
Dialogue: 0,0:09:29.98,0:09:33.10,CHN,,0,0,0,,就得迭代更多轮  才能打破积分为π的规律
Dialogue: 0,0:09:32.45,0:09:35.88,CHN,,0,0,0,,{\pos(1610,900) \fs40 \fad(500,0)}一个我的计算机无法在\N合理时间内计算的极小的正数
Dialogue: 0,0:09:33.10,0:09:35.49,ENG,,0,0,0,,in the analogy, what that will correspond to
Dialogue: 0,0:09:33.10,0:09:35.49,CHN,,0,0,0,,如果放回类比的情况里  就对应了
Dialogue: 0,0:09:35.49,0:09:36.44,ENG,,0,0,0,,is the same setup
Dialogue: 0,0:09:36.44,0:09:39.32,ENG,,0,0,0,,but where the function we start with has an even longer plateau -
Dialogue: 0,0:09:35.49,0:09:39.32,CHN,,0,0,0,,其它条件不变   但平稳段伸得更长了
Dialogue: 0,0:09:39.32,0:09:43.33,ENG,,0,0,0,,stretching from x = -1 up to 1, meaning its length is 2.
Dialogue: 0,0:09:39.32,0:09:43.33,CHN,,0,0,0,,一直从 -1 到 1 也就是长度为 2
Dialogue: 0,0:09:43.33,0:09:45.80,ENG,,0,0,0,,So, as you do this repeated moving average process,
Dialogue: 0,0:09:43.33,0:09:45.80,CHN,,0,0,0,,这样在滑动平均时
Dialogue: 0,0:09:45.80,0:09:48.25,ENG,,0,0,0,,eating into it with smaller and smaller windows,
Dialogue: 0,0:09:45.80,0:09:48.25,CHN,,0,0,0,,能蚕食高原的窗口越来越小
Dialogue: 0,0:09:48.25,0:09:51.60,ENG,,0,0,0,,it takes a lot longer for them to eat into the whole plateau.
Dialogue: 0,0:09:48.25,0:09:51.60,CHN,,0,0,0,,要消化掉整个高原  就需要多得多的迭代次数
Dialogue: 0,0:09:51.60,0:09:54.59,ENG,,0,0,0,,More specifically, the relevant computation is to ask -
Dialogue: 0,0:09:51.60,0:09:54.59,CHN,,0,0,0,,更具体点  我们要去计算
Dialogue: 0,0:09:54.59,0:09:57.61,ENG,,0,0,0,,how long do you have to add these reciprocals of odd numbers
Dialogue: 0,0:09:54.59,0:09:57.61,CHN,,0,0,0,,要加多少项奇数的倒数
Dialogue: 0,0:09:57.61,0:09:59.64,ENG,,0,0,0,,until that sum becomes bigger than two?
Dialogue: 0,0:09:57.61,0:09:59.64,CHN,,0,0,0,,结果才能比 2 大呢
Dialogue: 0,0:09:59.64,0:10:03.47,ENG,,0,0,0,,And it turns out that you have to go until you hit the number 113,
Dialogue: 0,0:09:59.64,0:10:03.47,CHN,,0,0,0,,答案是要加到 1/113
Dialogue: 0,0:10:03.47,0:10:04.94,ENG,,0,0,0,,Which will correspond to the fact that
Dialogue: 0,0:10:03.47,0:10:04.94,CHN,,0,0,0,,这也对应着
Dialogue: 0,0:10:04.94,0:10:08.63,ENG,,0,0,0,,the integral pattern there continues until you hit 113.
Dialogue: 0,0:10:04.94,0:10:08.63,CHN,,0,0,0,,积分为π的规律  要一直到113才被打破
Dialogue: 0,0:10:03.75,0:10:09.21,CHN,,0,0,0,,{\pos(1610,900) \fs40 \fad(500,0)}一个我的计算机无法在\N合理时间内计算的极小的正数
Dialogue: 0,0:10:09.38,0:10:11.00,ENG,,0,0,0,,And by the way, I should emphasize that
Dialogue: 0,0:10:09.38,0:10:11.00,CHN,,0,0,0,,另外我要强调的是
Dialogue: 0,0:10:11.00,0:10:13.89,ENG,,0,0,0,,there is nothing special about these reciprocals of odd numbers;
Dialogue: 0,0:10:11.00,0:10:13.89,CHN,,0,0,0,,这些 1/3 1/5 1/7 的奇数倒数
Dialogue: 0,0:10:13.89,0:10:15.66,ENG,,0,0,0,,one third, one fifth, one seventh -
Dialogue: 0,0:10:13.89,0:10:15.66,CHN,,0,0,0,,也并没有什么特别的
Dialogue: 0,0:10:13.38,0:10:15.75,CHN,,0,0,0,,{\pos(1020,380) \fs50 \fad(700,0)}并不特别
Dialogue: 0,0:10:15.66,0:10:17.72,ENG,,0,0,0,,that just happens to be the sequence of values
Dialogue: 0,0:10:17.72,0:10:19.56,ENG,,0,0,0,,highlighted by the Borweins in their paper
Dialogue: 0,0:10:15.66,0:10:19.56,CHN,,0,0,0,,只是因为刚好 Borwein 的论文里用了这个数列
Dialogue: 0,0:10:19.56,0:10:22.38,ENG,,0,0,0,,that made the sequence mildly famous in nerd circles.
Dialogue: 0,0:10:19.56,0:10:22.38,CHN,,0,0,0,,它也就在理工宅的圈子中火起来了
Dialogue: 0,0:10:22.38,0:10:23.06,ENG,,0,0,0,,More generally,
Dialogue: 0,0:10:22.38,0:10:23.06,CHN,,0,0,0,,一般地说
Dialogue: 0,0:10:22.05,0:10:23.38,CHN,,0,0,0,,{\pos(1020,380) \fs50 \fad(0,500)}并不特别
Dialogue: 0,0:10:23.06,0:10:27.08,ENG,,0,0,0,,we could be inserting any sequence of positive numbers into those sinc functions
Dialogue: 0,0:10:23.06,0:10:27.08,CHN,,0,0,0,,我们可以在sinc函数里插入任意正数列
Dialogue: 0,0:10:27.08,0:10:30.07,ENG,,0,0,0,,and as long as the sum of those numbers is less than one,
Dialogue: 0,0:10:27.08,0:10:30.07,CHN,,0,0,0,,只要和小于 1
Dialogue: 0,0:10:30.07,0:10:31.72,ENG,,0,0,0,,our expression will equal π,
Dialogue: 0,0:10:30.07,0:10:31.72,CHN,,0,0,0,,这个积分的结果就是 π
Dialogue: 0,0:10:31.72,0:10:33.51,ENG,,0,0,0,,but as soon as they become bigger than one,
Dialogue: 0,0:10:31.72,0:10:33.51,CHN,,0,0,0,,而当这些和超过 1 以后
Dialogue: 0,0:10:33.51,0:10:35.49,ENG,,0,0,0,,our expression drops a little below π
Dialogue: 0,0:10:33.51,0:10:35.49,CHN,,0,0,0,,结果就会比 π 小那么一点了
Dialogue: 0,0:10:35.49,0:10:38.66,ENG,,0,0,0,,and if you believe me that there's an analogy with these moving averages,
Dialogue: 0,0:10:35.49,0:10:38.66,CHN,,0,0,0,,如果你相信我它和滑动平均是同理的问题
Dialogue: 0,0:10:38.66,0:10:39.99,ENG,,0,0,0,,you can hopefully see why.
Dialogue: 0,0:10:38.66,0:10:39.99,CHN,,0,0,0,,你就应该已经知道为什么了
Dialogue: 0,0:10:42.15,0:10:44.05,ENG,,0,0,0,,But of course, the burning question is
Dialogue: 0,0:10:42.15,0:10:44.05,CHN,,0,0,0,,但这里更为关键的问题是
Dialogue: 0,0:10:42.11,0:10:53.31,CHN,,0,0,0,,{\pos(1380,350) \fs55 \fad(1800,600)}为什么这两种式子有关联呢？
Dialogue: 0,0:10:44.05,0:10:48.20,ENG,,0,0,0,,why on earth should these two situations have anything to do with each other?
Dialogue: 0,0:10:44.05,0:10:48.20,CHN,,0,0,0,,究竟为什么这两种式子会有关联呢
Dialogue: 0,0:10:48.20,0:10:52.65,ENG,,0,0,0,,From here, the argument does bring in two mildly heavy bits of machinery,
Dialogue: 0,0:10:48.20,0:10:52.65,CHN,,0,0,0,,而这就需要引入两个稍微重量级的工具
Dialogue: 0,0:10:52.55,0:10:54.15,CHN,,0,0,0,,{\move(1365,610,1365,460,0,700) \fad(700,0) \fs60}傅里叶变换
Dialogue: 0,0:10:54.15,0:10:59.95,CHN,,0,0,0,,{\move(1365,460,1365,210,300,1200) \fad(0,500) \fs60}傅里叶变换
Dialogue: 0,0:10:54.15,0:10:59.95,CHN,,0,0,0,,{\move(1365,550,1365,300,300,1200) \fad(1250,500) \fs60}卷积
Dialogue: 0,0:10:52.65,0:10:55.81,ENG,,0,0,0,,namely Fourier Transforms and convolutions.
Dialogue: 0,0:10:52.65,0:10:55.81,CHN,,0,0,0,,傅里叶变换和卷积
Dialogue: 0,0:10:55.81,0:10:59.18,ENG,,0,0,0,,And the way I'd like to go about this is to spend the remainder of this video
Dialogue: 0,0:10:55.81,0:10:59.18,CHN,,0,0,0,,这个视频接下来的部分
Dialogue: 0,0:10:59.48,0:11:06.28,CHN,,0,0,0,,{\pos(1290,330) \fs55 \fad(1800,800)}首先，我们来进行高层次的理解
Dialogue: 0,0:10:59.18,0:11:02.02,ENG,,0,0,0,,giving you a high level sense of how the argument will go
Dialogue: 0,0:10:59.18,0:11:02.02,CHN,,0,0,0,,我想让你在不必熟知这两个工具的情况下
Dialogue: 0,0:11:02.02,0:11:05.44,ENG,,0,0,0,,without necessarily assuming you're familiar with either of those two topics
Dialogue: 0,0:11:02.02,0:11:05.44,CHN,,0,0,0,,对它们有着关联的原因有个高层次的理解
Dialogue: 0,0:11:05.44,0:11:07.60,ENG,,0,0,0,,and then to explain why the details are true
Dialogue: 0,0:11:05.44,0:11:07.60,CHN,,0,0,0,,在后续专门讲卷积的视频中
Dialogue: 0,0:11:05.81,0:11:18.98,CHN,,0,0,0,,{\fad(500,0) \move(1430,460,1330,350,5500,6400)\fs60}卷积
Dialogue: 0,0:11:05.81,0:11:18.98,CHN,,0,0,0,,{\fad(255,0,0,5500,6400,0,0) \move(1430,460,1445,350,5500,6400)\fs60}定理
Dialogue: 0,0:11:07.60,0:11:10.16,ENG,,0,0,0,,in a video that's dedicated to convolutions.
Dialogue: 0,0:11:07.60,0:11:10.16,CHN,,0,0,0,,我会进一步解释细节
Dialogue: 0,0:11:10.16,0:11:12.73,ENG,,0,0,0,,In particular something called The Convolution Theorem
Dialogue: 0,0:11:10.16,0:11:12.73,CHN,,0,0,0,,尤其是卷积定理为何成立
Dialogue: 0,0:11:12.73,0:11:14.19,ENG,,0,0,0,,since it's incredibly beautiful
Dialogue: 0,0:11:12.73,0:11:14.19,CHN,,0,0,0,,这个定理非常美妙
Dialogue: 0,0:11:14.19,0:11:18.40,ENG,,0,0,0,,and it's useful well beyond this specific very esoteric question.
Dialogue: 0,0:11:14.19,0:11:18.40,CHN,,0,0,0,,而且实用之广  远超出这个非常偏门的问题
Dialogue: 0,0:11:18.98,0:11:21.31,CHN,,0,0,0,,{\pos(960,440)}画图展示两者联系
Dialogue: 0,0:11:21.34,0:11:25.10,ENG,,0,0,0,,To start, instead of focusing on this function sin(x)/x,
Dialogue: 0,0:11:21.34,0:11:25.10,CHN,,0,0,0,,首先  我们不去考虑 sin(x)/x 这个函数本身
Dialogue: 0,0:11:25.10,0:11:29.14,ENG,,0,0,0,,where we want to show why the signed area underneath its curve is equal to π,
Dialogue: 0,0:11:25.10,0:11:29.14,CHN,,0,0,0,,例如为什么曲线下方的带号面积是 π
Dialogue: 0,0:11:29.14,0:11:33.83,ENG,,0,0,0,,we'll make a simple substitution where we replace the input x with π*x,
Dialogue: 0,0:11:29.14,0:11:33.83,CHN,,0,0,0,,而是先把 x 替换成 πx
Dialogue: 0,0:11:33.83,0:11:37.61,ENG,,0,0,0,,which has the effect of squishing the graph horizontally by a factor of π
Dialogue: 0,0:11:33.83,0:11:37.61,CHN,,0,0,0,,也就把整个函数图像横向收缩了 π 倍
Dialogue: 0,0:11:37.61,0:11:40.61,ENG,,0,0,0,,and so, the area gets scaled down by a factor of π,
Dialogue: 0,0:11:37.61,0:11:40.61,CHN,,0,0,0,,面积也缩小了 π 倍
Dialogue: 0,0:11:40.61,0:11:42.11,ENG,,0,0,0,,meaning our new goal is to show
Dialogue: 0,0:11:40.61,0:11:42.11,CHN,,0,0,0,,于是我们要问的也就变成了
Dialogue: 0,0:11:42.11,0:11:45.45,ENG,,0,0,0,,why this integral on the right is equal to exactly one.
Dialogue: 0,0:11:42.11,0:11:45.45,CHN,,0,0,0,,为什么右边这个积分结果正好为 1
Dialogue: 0,0:11:45.45,0:11:47.47,ENG,,0,0,0,,By the way, in some engineering context,
Dialogue: 0,0:11:45.45,0:11:47.47,CHN,,0,0,0,,顺带一提  有时候在工程上
Dialogue: 0,0:11:47.47,0:11:51.87,ENG,,0,0,0,,people use the name "sinc" to refer to this function with the π on the inside
Dialogue: 0,0:11:47.47,0:11:51.87,CHN,,0,0,0,,一些人会用 sinc 来指代积分项里这个带 π 的函数
Dialogue: 0,0:11:51.87,0:11:54.38,ENG,,0,0,0,,since it's often very nice to have a normalized function,
Dialogue: 0,0:11:51.87,0:11:54.38,CHN,,0,0,0,,因为经过归一化的函数更方便使用
Dialogue: 0,0:11:54.38,0:11:56.64,ENG,,0,0,0,,meaning the area under it is equal to one.
Dialogue: 0,0:11:54.38,0:11:56.64,CHN,,0,0,0,,“归一化”指曲线下的带号面积为 1
Dialogue: 0,0:11:56.64,0:11:58.41,ENG,,0,0,0,,The point is, showing this integral on the right
Dialogue: 0,0:11:56.64,0:11:58.41,CHN,,0,0,0,,重点是  证明右边这个积分
Dialogue: 0,0:11:58.41,0:12:00.57,ENG,,0,0,0,,is exactly the same thing as showing the integral on the left,
Dialogue: 0,0:11:58.41,0:12:00.57,CHN,,0,0,0,,跟证明左边这个积分  完全是一码事
Dialogue: 0,0:12:00.57,0:12:02.47,ENG,,0,0,0,,it's just a change of variables.
Dialogue: 0,0:12:00.57,0:12:02.47,CHN,,0,0,0,,只是用了换元法
Dialogue: 0,0:12:02.47,0:12:04.69,ENG,,0,0,0,,And likewise for all of the other ones in our sequence,
Dialogue: 0,0:12:02.47,0:12:04.69,CHN,,0,0,0,,同理  对于序列中的其他积分式
Dialogue: 0,0:12:04.69,0:12:07.68,ENG,,0,0,0,,go through each of them, replace the X with the π times X.
Dialogue: 0,0:12:04.69,0:12:07.68,CHN,,0,0,0,,我们把每一个式子里的x都换成πx
Dialogue: 0,0:12:08.75,0:12:18.35,CHN,,0,0,0,,{\pos(470,165) \fs55}这些算式...
Dialogue: 0,0:12:08.75,0:12:18.35,CHN,,0,0,0,,{\pos(1450,90) \fs55}...(在某种意义上)与它们等价
Dialogue: 0,0:12:08.84,0:12:10.31,ENG,,0,0,0,,And from here, the claim is that
Dialogue: 0,0:12:08.84,0:12:10.31,CHN,,0,0,0,,这时我们要证的是
Dialogue: 0,0:12:10.31,0:12:13.88,ENG,,0,0,0,,all these integrals are not just analogous to the moving average examples
Dialogue: 0,0:12:10.31,0:12:13.88,CHN,,0,0,0,,这些积分跟“滑动窗口均值”的联系绝不只是类比
Dialogue: 0,0:12:13.88,0:12:18.48,ENG,,0,0,0,,but that both of these are two distinct ways of computing exactly the same thing.
Dialogue: 0,0:12:13.88,0:12:18.48,CHN,,0,0,0,,两条不同的路子  根本就是在计算同一个东西
Dialogue: 0,0:12:18.48,0:12:30.61,CHN,,0,0,0,,{\pos(960,200)\u1 \fs70}我们必须揭示的是{\u1}
Dialogue: 0,0:12:28.45,0:12:30.61,CHN,,0,0,0,,{\pos(340,150) \fs55 \fad(800,0)}这意味着？
Dialogue: 0,0:12:18.48,0:12:20.34,ENG,,0,0,0,,And the connection comes down to the fact that
Dialogue: 0,0:12:18.48,0:12:20.34,CHN,,0,0,0,,两者的联系  归根就是因为{\fsp-43.5}：
Dialogue: 0,0:12:20.34,0:12:23.94,ENG,,0,0,0,,this sinc function or the engineer sinc function with the π on the inside
Dialogue: 0,0:12:20.34,0:12:23.94,CHN,,0,0,0,,sinc函数，或者说工程师含π的sinc函数
Dialogue: 0,0:12:23.94,0:12:25.74,ENG,,0,0,0,,is related to the rect function
Dialogue: 0,0:12:23.94,0:12:25.74,CHN,,0,0,0,,跟rect函数有所关联
Dialogue: 0,0:12:25.74,0:12:28.09,ENG,,0,0,0,,using what's known as a Fourier Transform.
Dialogue: 0,0:12:25.74,0:12:28.09,CHN,,0,0,0,,这要借助所谓的“傅里叶变换”
Dialogue: 0,0:12:28.09,0:12:30.19,ENG,,0,0,0,,Now if you've never heard of a Fourier Transform,
Dialogue: 0,0:12:28.09,0:12:30.19,CHN,,0,0,0,,如果你从未听过这个概念
Dialogue: 0,0:12:30.19,0:12:32.70,ENG,,0,0,0,,there are a few other videos on this channel all about it.
Dialogue: 0,0:12:30.19,0:12:32.70,CHN,,0,0,0,,我们频道有几期视频就是介绍傅里叶变换的
Dialogue: 0,0:12:30.61,0:13:01.11,CHN,,0,0,0,,{\an1 \pos(1330,140) \fs70 \fad(2000,0)}傅里叶变换
Dialogue: 0,0:12:32.70,0:12:35.97,ENG,,0,0,0,,The way it's often described is that if you want to break down a function
Dialogue: 0,0:12:32.70,0:12:35.97,CHN,,0,0,0,,我们一般这样来描述：如果你想把周期函数
Dialogue: 0,0:12:35.97,0:12:38.55,ENG,,0,0,0,,as the sum of a bunch of pure frequencies
Dialogue: 0,0:12:35.97,0:12:38.55,CHN,,0,0,0,,分解成“许多纯正弦波”之和
Dialogue: 0,0:12:38.55,0:12:39.98,ENG,,0,0,0,,or in the case of an infinite function,
Dialogue: 0,0:12:38.55,0:12:39.98,CHN,,0,0,0,,或者把定义域无限长的函数
Dialogue: 0,0:12:39.98,0:12:42.74,ENG,,0,0,0,,a continuous integral of a bunch of pure frequencies,
Dialogue: 0,0:12:39.98,0:12:42.74,CHN,,0,0,0,,分解成“无数纯正弦波”的连续积分
Dialogue: 0,0:12:42.74,0:12:44.14,ENG,,0,0,0,,the Fourier Transform will tell you
Dialogue: 0,0:12:44.14,0:12:47.08,ENG,,0,0,0,,all the strength and phases for all those constituent parts.
Dialogue: 0,0:12:42.74,0:12:47.08,CHN,,0,0,0,,傅里叶变换可以告诉你  每个组分的强度和相位
Dialogue: 0,0:12:47.08,0:12:49.09,ENG,,0,0,0,,But all you really need to know here is that
Dialogue: 0,0:12:47.08,0:12:49.09,CHN,,0,0,0,,但你现在只需要知道
Dialogue: 0,0:12:49.09,0:12:53.22,ENG,,0,0,0,,is something which takes in one function and spits out a new function
Dialogue: 0,0:12:49.09,0:12:53.22,CHN,,0,0,0,,向它输入一个函数  它会输出一个新函数
Dialogue: 0,0:12:53.22,0:12:54.74,ENG,,0,0,0,,and you often think of it as kind of
Dialogue: 0,0:12:53.22,0:12:54.74,CHN,,0,0,0,,你可以把它想像成是
Dialogue: 0,0:12:54.74,0:12:58.86,ENG,,0,0,0,,rephrasing the information of your original function in a different language.
Dialogue: 0,0:12:54.74,0:12:58.86,CHN,,0,0,0,,将你函数里蕴含的信息  换一种语言重新表述出来
Dialogue: 0,0:12:58.86,0:13:01.12,ENG,,0,0,0,,Like you're looking at it from a new perspective.
Dialogue: 0,0:12:58.86,0:13:01.12,CHN,,0,0,0,,也就是在用新的视角去看待它
Dialogue: 0,0:13:01.12,0:13:34.78,CHN,,0,0,0,,{\pos(960,200)\u1 \fs70}我们必须揭示的是{\u1}
Dialogue: 0,0:13:01.12,0:13:02.34,ENG,,0,0,0,,For example, like I said,
Dialogue: 0,0:13:01.12,0:13:02.34,CHN,,0,0,0,,举个例子
Dialogue: 0,0:13:02.34,0:13:04.90,ENG,,0,0,0,,this sinc function written in this new language
Dialogue: 0,0:13:02.34,0:13:04.90,CHN,,0,0,0,,如果对sinc函数作傅里叶变换
Dialogue: 0,0:13:04.90,0:13:06.57,ENG,,0,0,0,,where you take a Fourier Transform
Dialogue: 0,0:13:04.90,0:13:06.57,CHN,,0,0,0,,用另一种语言重述
Dialogue: 0,0:13:06.57,0:13:08.95,ENG,,0,0,0,,looks like our top hat rect function.
Dialogue: 0,0:13:06.57,0:13:08.95,CHN,,0,0,0,,它就成了rect函数里的“高原”部分
Dialogue: 0,0:13:08.95,0:13:10.24,ENG,,0,0,0,,And vice versa by the way,
Dialogue: 0,0:13:08.95,0:13:10.24,CHN,,0,0,0,,其实反之亦然
Dialogue: 0,0:13:10.24,0:13:12.15,ENG,,0,0,0,,this is a nice thing about Fourier Transforms
Dialogue: 0,0:13:10.24,0:13:12.15,CHN,,0,0,0,,关于Y轴对称的偶函数  有一个好处
Dialogue: 0,0:13:12.15,0:13:15.84,ENG,,0,0,0,,for functions that are symmetric about the Y axis, that is its own inverse.
Dialogue: 0,0:13:12.15,0:13:15.84,CHN,,0,0,0,,傅里叶变换和逆变换一样 (都是实值偶函数)
Dialogue: 0,0:13:15.84,0:13:19.04,ENG,,0,0,0,,and actually the slightly more general fact that we'll need to show
Dialogue: 0,0:13:15.84,0:13:19.04,CHN,,0,0,0,,我们需要说明的更一般化的第一件事实是
Dialogue: 0,0:13:19.04,0:13:22.02,ENG,,0,0,0,,is how when you transform the stretched out version of our sinc function
Dialogue: 0,0:13:19.04,0:13:22.02,CHN,,0,0,0,,如果你变换这个拉伸后的sinc函数
Dialogue: 0,0:13:22.02,0:13:24.84,ENG,,0,0,0,,where you stretch it horizontally by a factor of K,
Dialogue: 0,0:13:22.02,0:13:24.84,CHN,,0,0,0,,水平方向拉伸倍数为K
Dialogue: 0,0:13:24.84,0:13:28.49,ENG,,0,0,0,,what you get is a stretched and squished version of this rect function.
Dialogue: 0,0:13:24.84,0:13:28.49,CHN,,0,0,0,,你就得到了原rect函数的拉宽压扁版本
Dialogue: 0,0:13:28.49,0:13:31.62,ENG,,0,0,0,,But of course, all of these are just meaningless words and terminology
Dialogue: 0,0:13:28.49,0:13:31.62,CHN,,0,0,0,,当然  这些语句和术语本身无用
Dialogue: 0,0:13:31.62,0:13:35.01,ENG,,0,0,0,,unless you can actually do something upon making this translation.
Dialogue: 0,0:13:31.62,0:13:35.01,CHN,,0,0,0,,除非你能让这种新视角发挥用处
Dialogue: 0,0:13:35.01,0:13:36.51,ENG,,0,0,0,,And the real idea behind
Dialogue: 0,0:13:36.51,0:13:39.45,ENG,,0,0,0,,why Fourier Transforms are such a useful thing for math
Dialogue: 0,0:13:35.01,0:13:39.45,CHN,,0,0,0,,傅里叶变换之所以如此有用  真正原因在于
Dialogue: 0,0:13:39.45,0:13:43.05,ENG,,0,0,0,,is that when you take statements and questions about a particular function
Dialogue: 0,0:13:39.45,0:13:43.05,CHN,,0,0,0,,若已知某函数的信息  你拿着关于该函数的问题
Dialogue: 0,0:13:43.05,0:13:45.28,ENG,,0,0,0,,and then you look at what they correspond to
Dialogue: 0,0:13:43.05,0:13:45.28,CHN,,0,0,0,,然后你想看看  在变换过的函数里
Dialogue: 0,0:13:45.28,0:13:48.18,ENG,,0,0,0,,with respect to the transformed version of that function,
Dialogue: 0,0:13:45.28,0:13:48.18,CHN,,0,0,0,,这些陈述和问题会对应什么
Dialogue: 0,0:13:34.78,0:13:55.31,CHN,,0,0,0,,{\pos(1430,190) \fs70 \1c&HB3C558&}傅立叶变换后的频域
Dialogue: 0,0:13:48.18,0:13:49.38,ENG,,0,0,0,,those statements and questions
Dialogue: 0,0:13:49.38,0:13:51.99,ENG,,0,0,0,,often look very very different in this new language,
Dialogue: 0,0:13:48.18,0:13:51.99,CHN,,0,0,0,,那么  在新的语言里  它们经常会彻底“改头换面”
Dialogue: 0,0:13:51.99,0:13:55.55,ENG,,0,0,0,,and sometimes it makes the questions a lot easier to answer.
Dialogue: 0,0:13:51.99,0:13:55.55,CHN,,0,0,0,,有时候会让问题化难为易
Dialogue: 0,0:13:55.31,0:14:46.25,CHN,,0,0,0,,{\pos(1600,100)\u1 \fs70}我们必须揭示的是{\u1}
Dialogue: 0,0:13:55.55,0:13:57.45,ENG,,0,0,0,,For example, one very nice little fact,
Dialogue: 0,0:13:55.55,0:13:57.45,CHN,,0,0,0,,就拿有意思的一点来说
Dialogue: 0,0:13:57.45,0:13:59.60,ENG,,0,0,0,,another thing on our list of things to show,
Dialogue: 0,0:13:57.45,0:13:59.60,CHN,,0,0,0,,也是我们要说明的第二件事实{\fsp-43.5}：
Dialogue: 0,0:13:59.60,0:14:04.10,ENG,,0,0,0,,is that if you want to compute the integral of some function from -∞ to ∞,
Dialogue: 0,0:13:59.60,0:14:04.10,CHN,,0,0,0,,如果你想计算某个函数从−∞到∞的积分
Dialogue: 0,0:14:04.10,0:14:07.01,ENG,,0,0,0,,this signed area under the entirety of its curve,
Dialogue: 0,0:14:04.10,0:14:07.01,CHN,,0,0,0,,在这整个曲线下的带符号面积
Dialogue: 0,0:14:07.01,0:14:09.92,ENG,,0,0,0,,it's the same thing as simply evaluating
Dialogue: 0,0:14:07.01,0:14:09.92,CHN,,0,0,0,,就等同于求出
Dialogue: 0,0:14:09.92,0:14:13.89,ENG,,0,0,0,,the Fourier Transformed version of that function at the input zero.
Dialogue: 0,0:14:09.92,0:14:13.89,CHN,,0,0,0,,“傅里叶变换后的函数”在0处的值
Dialogue: 0,0:14:13.89,0:14:17.25,ENG,,0,0,0,,This is a fact that will actually just pop right out of the definition
Dialogue: 0,0:14:13.89,0:14:17.25,CHN,,0,0,0,,其实  套用定义就能直接得出这一点
Dialogue: 0,0:14:17.25,0:14:19.96,ENG,,0,0,0,,and representative of a more general vibe that
Dialogue: 0,0:14:17.25,0:14:19.96,CHN,,0,0,0,,但它也代表了更广泛的性质{\fsp-43.5}：
Dialogue: 0,0:14:19.96,0:14:24.01,ENG,,0,0,0,,every individual output of the Fourier Transform function on the right
Dialogue: 0,0:14:19.96,0:14:24.01,CHN,,0,0,0,,右边由傅里叶变换函数得出的每个单独点
Dialogue: 0,0:14:24.01,0:14:26.36,ENG,,0,0,0,,corresponds to some kind of global information
Dialogue: 0,0:14:26.36,0:14:28.63,ENG,,0,0,0,,about the original function on the left.
Dialogue: 0,0:14:24.01,0:14:28.63,CHN,,0,0,0,,都代表了原函数的某种全局信息
Dialogue: 0,0:14:28.63,0:14:31.34,ENG,,0,0,0,,In our specific case, it means if you believe me
Dialogue: 0,0:14:28.63,0:14:31.34,CHN,,0,0,0,,具体放在我们的例子里：如果你相信我说的
Dialogue: 0,0:14:31.34,0:14:33.55,ENG,,0,0,0,,that this sinc function and the rect function
Dialogue: 0,0:14:31.34,0:14:33.55,CHN,,0,0,0,,这里的sinc函数和rect函数
Dialogue: 0,0:14:33.55,0:14:35.96,ENG,,0,0,0,,are related with the Fourier Transform like this,
Dialogue: 0,0:14:33.55,0:14:35.96,CHN,,0,0,0,,互为对方的傅里叶变换
Dialogue: 0,0:14:35.96,0:14:39.39,ENG,,0,0,0,,it explains the integral which is otherwise a very tricky thing to compute
Dialogue: 0,0:14:35.96,0:14:39.39,CHN,,0,0,0,,那么  原先老难算的积分值  现在就小菜一碟了
Dialogue: 0,0:14:39.39,0:14:41.18,ENG,,0,0,0,,because it's saying all that signed area
Dialogue: 0,0:14:39.39,0:14:41.18,CHN,,0,0,0,,因为左边的整个有向面积
Dialogue: 0,0:14:41.18,0:14:44.06,ENG,,0,0,0,,is the same thing as evaluating rect at zero
Dialogue: 0,0:14:41.18,0:14:44.06,CHN,,0,0,0,,就成了计算rect函数在0处的值
Dialogue: 0,0:14:44.06,0:14:45.37,ENG,,0,0,0,,which is just one.
Dialogue: 0,0:14:44.06,0:14:45.37,CHN,,0,0,0,,也就是1
Dialogue: 0,0:14:46.31,0:14:56.61,CHN,,0,0,0,,{\pos(1400,320) \fs55 \fad(1800,500)}但是你怎么来计算傅里叶变换呢？
Dialogue: 0,0:14:55.81,0:15:06.81,CHN,,0,0,0,,{\pos(1260,430) \fs55 \fad(1000,0)}我们总会得到的
Dialogue: 0,0:14:46.37,0:14:49.44,ENG,,0,0,0,,Now, you could complain - surely this just moves the bump under the rug.
Dialogue: 0,0:14:46.37,0:14:49.44,CHN,,0,0,0,,你可以抱怨一{\fsp12}下{\fsp-12}—{\fsp12}—{\fsp0}这只是掩盖了问题
Dialogue: 0,0:14:49.44,0:14:52.43,ENG,,0,0,0,,Surely computing this Fourier Transform, whatever that looks like
Dialogue: 0,0:14:49.44,0:14:52.43,CHN,,0,0,0,,当然  计算傅里叶变换
Dialogue: 0,0:14:52.43,0:14:54.98,ENG,,0,0,0,,would be as hard as computing the original integral.
Dialogue: 0,0:14:52.43,0:14:54.98,CHN,,0,0,0,,一点儿不比计算原积分要简单
Dialogue: 0,0:14:54.98,0:14:55.86,ENG,,0,0,0,,But the idea is that
Dialogue: 0,0:14:54.98,0:14:55.86,CHN,,0,0,0,,但这里的思想是
Dialogue: 0,0:14:55.86,0:14:59.23,ENG,,0,0,0,,there's lots of tips and tricks for computing these Fourier Transforms
Dialogue: 0,0:14:55.86,0:14:59.23,CHN,,0,0,0,,计算傅里叶变换时能用上很多技巧和窍门
Dialogue: 0,0:14:59.23,0:15:01.15,ENG,,0,0,0,,and moreover, that when you do,
Dialogue: 0,0:14:59.23,0:15:01.15,CHN,,0,0,0,,而且当你这样做的时候
Dialogue: 0,0:15:01.15,0:15:03.81,ENG,,0,0,0,,it tells you a lot more information than just that integral.
Dialogue: 0,0:15:01.15,0:15:03.81,CHN,,0,0,0,,它提供的信息远多于这个积分本身
Dialogue: 0,0:15:03.81,0:15:07.03,ENG,,0,0,0,,You get a lot of bang for your buck out of doing the computation.
Dialogue: 0,0:15:03.81,0:15:07.03,CHN,,0,0,0,,这个计算一本万利
Dialogue: 0,0:15:06.88,0:15:09.88,CHN,,0,0,0,,{\pos(960,210)\fs70 \fad(500,500)}关键事实
Dialogue: 0,0:15:07.03,0:15:08.20,ENG,,0,0,0,,Now, the other key fact
Dialogue: 0,0:15:08.20,0:15:10.79,ENG,,0,0,0,,that will explain the connection we're hunting for is that
Dialogue: 0,0:15:07.03,0:15:10.79,CHN,,0,0,0,,第三件能解释这种联系的关键事实在于
Dialogue: 0,0:15:10.79,0:15:14.10,ENG,,0,0,0,,if you have two different functions and you take their product
Dialogue: 0,0:15:10.79,0:15:14.10,CHN,,0,0,0,,如果你把两个不同的函数相乘
Dialogue: 0,0:15:14.10,0:15:17.25,ENG,,0,0,0,,and then you take the Fourier Transform of that product,
Dialogue: 0,0:15:14.10,0:15:17.25,CHN,,0,0,0,,然后对积函数作傅里叶变换
Dialogue: 0,0:15:17.25,0:15:18.35,ENG,,0,0,0,,it would be the same thing
Dialogue: 0,0:15:17.25,0:15:18.35,CHN,,0,0,0,,它就等同于
Dialogue: 0,0:15:18.35,0:15:22.25,ENG,,0,0,0,,as if you individually took the Fourier Transforms of your original function
Dialogue: 0,0:15:18.35,0:15:22.25,CHN,,0,0,0,,先对两个函数分别作傅里叶变换
Dialogue: 0,0:15:22.25,0:15:24.50,ENG,,0,0,0,,and then combined them using a new kind of operation
Dialogue: 0,0:15:22.25,0:15:24.50,CHN,,0,0,0,,再用一种新的运算将二者结合
Dialogue: 0,0:15:24.50,0:15:28.35,ENG,,0,0,0,,that we'll talk all about in the next video known as a Convolution.
Dialogue: 0,0:15:24.50,0:15:28.35,CHN,,0,0,0,,我们会在下一期视频中谈到这种运{\fsp12}算{\fsp-12}—{\fsp12}—{\fsp0}卷积
Dialogue: 0,0:15:28.35,0:15:31.01,ENG,,0,0,0,,Now, even though there's a lot to be explained with convolutions,
Dialogue: 0,0:15:28.35,0:15:31.01,CHN,,0,0,0,,尽管对于卷积  我还需要给出更多解释
Dialogue: 0,0:15:31.01,0:15:35.54,ENG,,0,0,0,,the upshot will be that in our specific case with these rectangular functions,
Dialogue: 0,0:15:31.01,0:15:35.54,CHN,,0,0,0,,但结果是  在我们这个rect函数的特定情况下
Dialogue: 0,0:15:35.54,0:15:38.05,ENG,,0,0,0,,taking a convolution looks just like
Dialogue: 0,0:15:35.54,0:15:38.05,CHN,,0,0,0,,计算“卷积”看起来就像是
Dialogue: 0,0:15:38.05,0:15:41.35,ENG,,0,0,0,,one of the moving averages that we've been talking about this whole time.
Dialogue: 0,0:15:38.05,0:15:41.35,CHN,,0,0,0,,我们刚才一直在提的滑动窗口均值
Dialogue: 0,0:15:41.35,0:15:43.13,ENG,,0,0,0,,Combined with our previous fact that
Dialogue: 0,0:15:41.35,0:15:43.13,CHN,,0,0,0,,将其与前面提到的
Dialogue: 0,0:15:43.13,0:15:47.45,ENG,,0,0,0,,integrating in one context looks like evaluating at zero in another context,
Dialogue: 0,0:15:43.13,0:15:47.45,CHN,,0,0,0,,“左边是积分  换到右边就成了求0处的值”结合起来
Dialogue: 0,0:15:47.45,0:15:50.65,ENG,,0,0,0,,if you believe me, that multiplying in one context
Dialogue: 0,0:15:47.45,0:15:50.65,CHN,,0,0,0,,如果你相信我  在左侧体现为“乘法”的东西
Dialogue: 0,0:15:50.65,0:15:53.33,ENG,,0,0,0,,corresponds to this new operation, convolutions,
Dialogue: 0,0:15:50.65,0:15:53.33,CHN,,0,0,0,,在右侧  则对应这种新的“卷积”运算
Dialogue: 0,0:15:53.33,0:15:56.21,ENG,,0,0,0,,which for our example you should just think of as moving averages,
Dialogue: 0,0:15:53.33,0:15:56.21,CHN,,0,0,0,,在本例中  你可以把卷积当成是滑动窗口均值
Dialogue: 0,0:15:56.21,0:16:00.37,ENG,,0,0,0,,that will explain why multiplying more and more of these sinc functions together
Dialogue: 0,0:15:56.21,0:16:00.37,CHN,,0,0,0,,这就解释了  为什么把越来越多的sinc函数相乘
Dialogue: 0,0:15:56.18,0:16:15.58,CHN,,0,0,0,,{\pos(490,140) \fs70 \fad(1800,0)}乘积并求积分
Dialogue: 0,0:16:03.41,0:16:15.58,CHN,,0,0,0,,{\pos(1440,140) \fs70 \fad(500,0)}零点处的滑动窗口均值
Dialogue: 0,0:16:02.68,0:16:15.58,CHN,,0,0,0,,{\pos(950,140) \fs50 \fad(650,0) \1c&HB3C558&}变换到\N傅里叶频域
Dialogue: 0,0:16:00.37,0:16:03.27,ENG,,0,0,0,,can be thought about in terms of these progressive moving averages
Dialogue: 0,0:16:00.37,0:16:03.27,CHN,,0,0,0,,可以想象成这个逐步迭代的滑动均值
Dialogue: 0,0:16:03.27,0:16:05.06,ENG,,0,0,0,,and always evaluating at zero,
Dialogue: 0,0:16:03.27,0:16:05.06,CHN,,0,0,0,,并且总是只求0处的值
Dialogue: 0,0:16:05.06,0:16:07.29,ENG,,0,0,0,,which in turn gives a really lovely intuition
Dialogue: 0,0:16:05.06,0:16:07.29,CHN,,0,0,0,,这反过来向我们直观地展现了
Dialogue: 0,0:16:07.29,0:16:09.44,ENG,,0,0,0,,for why you would expect such a stable value
Dialogue: 0,0:16:07.29,0:16:09.44,CHN,,0,0,0,,为什么“结果一直稳定  直到打破规律”
Dialogue: 0,0:16:09.44,0:16:11.14,ENG,,0,0,0,,before eventually something breaks down
Dialogue: 0,0:16:09.44,0:16:11.14,CHN,,0,0,0,,的这个事实并不出奇
Dialogue: 0,0:16:11.14,0:16:14.39,ENG,,0,0,0,,as the edges of the plateau inch closer and closer to the center.
Dialogue: 0,0:16:11.14,0:16:14.39,CHN,,0,0,0,,可以由“高原的边界越来越靠近中心”推出来
Dialogue: 0,0:16:15.58,0:16:23.31,CHN,,0,0,0,,{\pos(1600,100)\u1 \fs70 \fad(0,500)}我们必须揭示的是{\u1}
Dialogue: 0,0:16:17.05,0:16:23.71,CHN,,0,0,0,,{\pos(1550,360) \1c&H00FFFF& \fs70 \fad(1500,500)}卷积定理
Dialogue: 0,0:16:15.58,0:16:17.89,ENG,,0,0,0,,This last key fact by the way has a special name,
Dialogue: 0,0:16:15.58,0:16:17.89,CHN,,0,0,0,,顺带一提  我们把最后这个关键事实
Dialogue: 0,0:16:17.89,0:16:19.49,ENG,,0,0,0,,it's called the Convolution Theorem.
Dialogue: 0,0:16:17.89,0:16:19.49,CHN,,0,0,0,,称作“卷积定理”
Dialogue: 0,0:16:19.49,0:16:22.06,ENG,,0,0,0,,And again, it's something that we'll go into much more deeply.
Dialogue: 0,0:16:19.49,0:16:22.06,CHN,,0,0,0,,更深入的内容依然放在下期视频里
Dialogue: 0,0:16:22.94,0:16:26.24,ENG,,0,0,0,,I recognize that it's maybe a little unsatisfying to end things here
Dialogue: 0,0:16:22.94,0:16:26.24,CHN,,0,0,0,,我意识到这个结尾看得观众有点意犹未尽
Dialogue: 0,0:16:22.85,0:16:32.21,CHN,,0,0,0,,{\pos(1260,620)\fs50 \fad(1800,500)}你不解释一下为什么\N这些是正确的么？
Dialogue: 0,0:16:26.24,0:16:28.48,ENG,,0,0,0,,by laying down three magical facts
Dialogue: 0,0:16:26.24,0:16:28.48,CHN,,0,0,0,,我丢下三条神奇的事实
Dialogue: 0,0:16:28.48,0:16:30.58,ENG,,0,0,0,,and saying "everything follows from those",
Dialogue: 0,0:16:28.48,0:16:30.58,CHN,,0,0,0,,然后说“一切皆循此法”
Dialogue: 0,0:16:30.58,0:16:32.53,ENG,,0,0,0,,but hopefully this gives you a little glimpse of
Dialogue: 0,0:16:30.58,0:16:32.53,CHN,,0,0,0,,但我是希望  这能让你一窥
Dialogue: 0,0:16:31.45,0:16:37.68,CHN,,0,0,0,,{\pos(860,610)\fs50 \fad(1000,0)}耐心一些
Dialogue: 0,0:16:32.53,0:16:35.18,ENG,,0,0,0,,why powerful tools like Fourier Transforms
Dialogue: 0,0:16:32.53,0:16:35.18,CHN,,0,0,0,,为什么像傅里叶变换这样的强大工具
Dialogue: 0,0:16:35.18,0:16:37.80,ENG,,0,0,0,,can be so useful for tricky problems.
Dialogue: 0,0:16:35.18,0:16:37.80,CHN,,0,0,0,,对这些棘手的难题这么有效
Dialogue: 0,0:16:37.68,0:16:50.35,CHN,,0,0,0,,{\pos(470,165) \fs55}这些算式...
Dialogue: 0,0:16:37.68,0:16:50.35,CHN,,0,0,0,,{\pos(1450,90) \fs55}...(在某种意义上)与它们等价
Dialogue: 0,0:16:37.80,0:16:41.10,ENG,,0,0,0,,It's a systematic way to provide a shift in perspective
Dialogue: 0,0:16:37.80,0:16:41.10,CHN,,0,0,0,,这种系统化的方法扩宽了我们的视角
Dialogue: 0,0:16:41.10,0:16:43.99,ENG,,0,0,0,,where hard problems can sometimes look easier.
Dialogue: 0,0:16:41.10,0:16:43.99,CHN,,0,0,0,,让有些难题能变得更简单
Dialogue: 0,0:16:43.99,0:16:46.12,ENG,,0,0,0,,If nothing else, it hopefully provides some motivation
Dialogue: 0,0:16:43.99,0:16:46.12,CHN,,0,0,0,,至少  我希望它能成为一个契机
Dialogue: 0,0:16:46.12,0:16:49.32,ENG,,0,0,0,,to learn about these beautiful things like the convolution theorem.
Dialogue: 0,0:16:46.12,0:16:49.32,CHN,,0,0,0,,推动你去学习这些有趣的理论  比如卷积定理
Dialogue: 0,0:16:49.32,0:16:50.92,ENG,,0,0,0,,As one more tiny teaser,
Dialogue: 0,0:16:49.32,0:16:50.92,CHN,,0,0,0,,稍微剧透一下{\fsp-43.5}：
Dialogue: 0,0:16:50.35,0:17:05.41,CHN,,0,0,0,,{\pos(960,520) \fs70}两个d位数
Dialogue: 0,0:16:50.92,0:16:53.72,ENG,,0,0,0,,another fun consequence of this convolution theorem
Dialogue: 0,0:16:50.92,0:16:53.72,CHN,,0,0,0,,卷积定理的另一个好玩的结果是
Dialogue: 0,0:16:53.72,0:16:55.78,ENG,,0,0,0,,will be that it opens the doors for an algorithm
Dialogue: 0,0:16:55.78,0:16:59.31,ENG,,0,0,0,,that lets you compute the product of two large numbers very quickly -
Dialogue: 0,0:16:53.72,0:16:59.31,CHN,,0,0,0,,它为“大数乘积的快速算法”推开了大门
Dialogue: 0,0:16:59.31,0:17:02.21,ENG,,0,0,0,,like way faster than you think should be even possible.
Dialogue: 0,0:16:59.31,0:17:02.21,CHN,,0,0,0,,速度快得让人难以置信
Dialogue: 0,0:17:03.05,0:17:04.91,ENG,,0,0,0,,So with that, I'll see you in the next video.
Dialogue: 0,0:17:03.05,0:17:04.91,CHN,,0,0,0,,我们下期见{\fsp-9}～
